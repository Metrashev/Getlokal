CREATE TABLE activity (id BIGINT AUTO_INCREMENT, user_id BIGINT, action_id BIGINT, text VARCHAR(255), caption VARCHAR(255), media_id BIGINT, status VARCHAR(255) DEFAULT 'approved', comment_count INT DEFAULT 0, votes_count INT DEFAULT 0, anonymous_votes_count INT DEFAULT 0, page_id BIGINT, type VARCHAR(255), activity_id BIGINT, modified_field VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX activity_type_idx (type), INDEX user_id_idx (user_id), INDEX media_id_idx (media_id), INDEX page_id_idx (page_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE activity (id BIGINT AUTO_INCREMENT, user_id BIGINT, action_id BIGINT, text VARCHAR(255), caption VARCHAR(255), media_id BIGINT, status VARCHAR(255) DEFAULT 'approved', comment_count INT DEFAULT 0, votes_count INT DEFAULT 0, anonymous_votes_count INT DEFAULT 0, page_id BIGINT, type VARCHAR(255), activity_id BIGINT, modified_field VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX media_id_idx (media_id), INDEX page_id_idx (page_id), INDEX action_id_idx (action_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE activity (id BIGINT AUTO_INCREMENT, user_id BIGINT, action_id BIGINT, text VARCHAR(255), caption VARCHAR(255), media_id BIGINT, status VARCHAR(255) DEFAULT 'approved', comment_count INT DEFAULT 0, votes_count INT DEFAULT 0, anonymous_votes_count INT DEFAULT 0, page_id BIGINT, type VARCHAR(255), activity_id BIGINT, modified_field VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX media_id_idx (media_id), INDEX page_id_idx (page_id), INDEX action_id_idx (action_id), INDEX activity_id_idx (activity_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE activity (id BIGINT AUTO_INCREMENT, user_id BIGINT, action_id BIGINT, text VARCHAR(255), caption VARCHAR(255), media_id BIGINT, status VARCHAR(255) DEFAULT 'approved', comment_count INT DEFAULT 0, votes_count INT DEFAULT 0, anonymous_votes_count INT DEFAULT 0, page_id BIGINT, type VARCHAR(255), activity_id BIGINT, modified_field VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX media_id_idx (media_id), INDEX page_id_idx (page_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE activity_log_user (id BIGINT AUTO_INCREMENT, object VARCHAR(30), action VARCHAR(30), email_address VARCHAR(255), ip_address VARCHAR(50), created_at DATETIME, object_id BIGINT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE activity (id BIGINT AUTO_INCREMENT, user_id BIGINT, action_id BIGINT, text VARCHAR(255), caption VARCHAR(255), media_id BIGINT, status VARCHAR(255) DEFAULT 'approved', comment_count INT DEFAULT 0, votes_count INT DEFAULT 0, anonymous_votes_count INT DEFAULT 0, page_id BIGINT, type VARCHAR(255), activity_id BIGINT, modified_field VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX media_id_idx (media_id), INDEX action_id_idx (action_id), INDEX activity_id_idx (activity_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ad_service_translation (id BIGINT, name VARCHAR(255), short_description TEXT, is_active TINYINT(1) DEFAULT '1' NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE ad_service (id BIGINT AUTO_INCREMENT, code VARCHAR(50), status TINYINT(1) DEFAULT '1' NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE ad_service_company (id BIGINT AUTO_INCREMENT, ad_service_id BIGINT NOT NULL, company_id BIGINT NOT NULL, status VARCHAR(255) DEFAULT 'registered', crm_id BIGINT, active_from DATE, active_to DATE, deal_start_date DATE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX ad_service_id_idx (ad_service_id), INDEX company_id_idx (company_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE admin_remember_key (id BIGINT AUTO_INCREMENT, page_admin_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX page_admin_id_idx (page_admin_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE api_login (id BIGINT AUTO_INCREMENT, user_id BIGINT, token VARCHAR(255), expires_at DATETIME, is_active TINYINT(1) DEFAULT '1', latitude VARCHAR(255), longitude VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_token_idx (token), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article_translation (id BIGINT, title VARCHAR(255), content TEXT, quotation TEXT, keywords VARCHAR(255), description TEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX article_translation_sluggable_idx (slug, lang), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE article (id BIGINT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'pending', publish_on DATETIME, user_id BIGINT, country_id BIGINT, location_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX country_id_idx (country_id), INDEX location_id_idx (location_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE article_category (id BIGINT AUTO_INCREMENT, category_id BIGINT, article_id BIGINT, INDEX category_id_idx (category_id), INDEX article_id_idx (article_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article_event (id BIGINT AUTO_INCREMENT, event_id BIGINT, article_id BIGINT, INDEX event_id_idx (event_id), INDEX article_id_idx (article_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article_image (id BIGINT AUTO_INCREMENT, article_id BIGINT, user_id BIGINT, filename VARCHAR(255), descrption VARCHAR(255), source VARCHAR(255), code VARCHAR(255), rank INT DEFAULT 1, INDEX article_id_idx (article_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE article_list (id BIGINT AUTO_INCREMENT, list_id BIGINT, article_id BIGINT, INDEX list_id_idx (list_id), INDEX article_id_idx (article_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article_page (id BIGINT AUTO_INCREMENT, article_id BIGINT, page_id BIGINT, INDEX article_id_idx (article_id), INDEX page_id_idx (page_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article_slug_log (id BIGINT AUTO_INCREMENT, article_id BIGINT, lang CHAR(2), old_slug VARCHAR(255), INDEX article_id_idx (article_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE badge_translation (id BIGINT, name VARCHAR(255), description TEXT, long_description TEXT, progress_text TEXT, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE badge (id BIGINT AUTO_INCREMENT, start_at DATETIME, end_at DATETIME, requirements INT, points INT, percent VARCHAR(5), is_active TINYINT(1), is_seasonal TINYINT(1), is_visible TINYINT(1), notify_by_email TINYINT(1), display_message TINYINT(1), small_active_image VARCHAR(255), active_image VARCHAR(255), inactive_image VARCHAR(255), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE badge_requirement (id BIGINT AUTO_INCREMENT, keyvalue BIGINT, badge_id BIGINT, group_no TINYINT, INDEX badge_id_idx (badge_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE badge_requirement_field (id BIGINT AUTO_INCREMENT, requirement_id BIGINT, keyname VARCHAR(255), INDEX requirement_id_idx (requirement_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE box (id BIGINT AUTO_INCREMENT, module VARCHAR(255), component VARCHAR(255), settings LONGTEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE box_to_zone (id BIGINT AUTO_INCREMENT, box_id BIGINT, keyname VARCHAR(255), col_no TINYINT, weight INT, settings LONGTEXT, INDEX box_id_idx (box_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE category_translation (id BIGINT, title VARCHAR(255) NOT NULL, is_active TINYINT(1) DEFAULT '1', slug VARCHAR(255), lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE category (id BIGINT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'approved', model_name VARCHAR(60) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, root_id BIGINT, lft INT, rgt INT, level SMALLINT, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE category_article_translation (id BIGINT, title VARCHAR(255) NOT NULL, is_active TINYINT(1) DEFAULT '1', slug VARCHAR(255), lang CHAR(2), UNIQUE INDEX category_article_translation_sluggable_idx (slug, lang), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE category_article (id BIGINT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'approved', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE category_article_classification (category_id BIGINT, classification_id BIGINT, PRIMARY KEY(category_id, classification_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE category_article_country (category_id BIGINT, country_id BIGINT, PRIMARY KEY(category_id, country_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE category_classification (category_id BIGINT, classification_id BIGINT, PRIMARY KEY(category_id, classification_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE category_sector (id BIGINT AUTO_INCREMENT, category_id BIGINT, sector_id BIGINT, INDEX category_id_idx (category_id), INDEX sector_id_idx (sector_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE check_in (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, company_id BIGINT NOT NULL, latitude VARCHAR(50), longitude VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX company_id_idx (company_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE check_in_status (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, company_id BIGINT NOT NULL, latitude VARCHAR(50), longitude VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX company_id_idx (company_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE city_translation (id BIGINT, name VARCHAR(255) NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE city (id BIGINT AUTO_INCREMENT, slug VARCHAR(255) NOT NULL, county_id BIGINT NOT NULL, is_default TINYINT(1) DEFAULT '0', lat VARCHAR(50), lng VARCHAR(50), INDEX county_id_idx (county_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE classification_translation (id BIGINT, title VARCHAR(255) NOT NULL, slug VARCHAR(255) NOT NULL, short_title VARCHAR(255) NOT NULL, is_active TINYINT(1) DEFAULT '1', number_of_places INT DEFAULT 0, keywords TEXT, description TEXT, old_slug VARCHAR(255) NOT NULL, page_title VARCHAR(255), meta_description LONGTEXT, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE classification (id BIGINT AUTO_INCREMENT, external_id VARCHAR(36) NOT NULL, category_id BIGINT, sector_id BIGINT, status VARCHAR(255) DEFAULT 'approved', crm_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX category_id_idx (category_id), INDEX sector_id_idx (sector_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE classification_sector (id BIGINT AUTO_INCREMENT, classification_id BIGINT, sector_id BIGINT, INDEX classification_id_idx (classification_id), INDEX sector_id_idx (sector_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE classification_slug_log (id BIGINT AUTO_INCREMENT, classification_id BIGINT, lang CHAR(2), old_slug VARCHAR(255), INDEX classification_id_idx (classification_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE comment (id BIGINT AUTO_INCREMENT, body TEXT, status VARCHAR(255) DEFAULT 'approved', user_id BIGINT, activity_id BIGINT, rank INT, parent_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX activity_id_idx (activity_id), INDEX parent_id_idx (parent_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE company_translation (id BIGINT, title VARCHAR(255) NOT NULL, description TEXT, content TEXT, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE company (id BIGINT AUTO_INCREMENT, external_id VARCHAR(36) NOT NULL, email VARCHAR(128), phone VARCHAR(255), phone1 VARCHAR(255), phone2 VARCHAR(255), website_url VARCHAR(255), googleplus_url VARCHAR(255), foursquare_url VARCHAR(255), twitter_url VARCHAR(255), facebook_url VARCHAR(255), facebook_id VARCHAR(50), city_id BIGINT NOT NULL, location_id BIGINT, image_id BIGINT, sector_id BIGINT, classification_id BIGINT, review_id BIGINT, company_type INT DEFAULT 0, company_number INT DEFAULT 0, parent_external_id VARCHAR(36), is_validated VARCHAR(255) DEFAULT 'not_validated', status VARCHAR(255) DEFAULT 'pending', number_of_reviews INT DEFAULT 0, average_rating FLOAT(18, 2) DEFAULT 0, is_address_modified TINYINT(1) DEFAULT '0', registration_no VARCHAR(14), updated_crm DATETIME, date_mod_crm DATETIME, created_by BIGINT, score DECIMAL(5, 2) DEFAULT 1, country_id BIGINT, last_modified_by BIGINT, date_last_modified_by DATETIME, referer VARCHAR(255), old_slug VARCHAR(255), cover_image_id BIGINT, logo_image_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), INDEX old_id_idx (external_id), INDEX rating_idx (average_rating, number_of_reviews), INDEX reviews_idx (number_of_reviews), UNIQUE INDEX company_sluggable_idx (slug), INDEX cover_image_id_idx (cover_image_id), INDEX city_id_idx (city_id), INDEX sector_id_idx (sector_id), INDEX classification_id_idx (classification_id), INDEX location_id_idx (location_id), INDEX created_by_idx (created_by), INDEX image_id_idx (image_id), INDEX country_id_idx (country_id), INDEX review_id_idx (review_id), INDEX last_modified_by_idx (last_modified_by), INDEX logo_image_id_idx (logo_image_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE company_classification (id BIGINT AUTO_INCREMENT, classification_id BIGINT, company_id BIGINT, INDEX classification_id_idx (classification_id), INDEX company_id_idx (company_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE company_detail (id BIGINT AUTO_INCREMENT, company_id BIGINT NOT NULL, mon_from SMALLINT, mon_to SMALLINT, tue_from SMALLINT, tue_to SMALLINT, wed_from SMALLINT, wed_to SMALLINT, thu_from SMALLINT, thu_to SMALLINT, fri_from SMALLINT, fri_to SMALLINT, sat_from SMALLINT, sat_to SMALLINT, sun_from SMALLINT, sun_to SMALLINT, confirmed TINYINT(1) DEFAULT '0', last_modified_by BIGINT, outdoor_seats BIGINT, indoor_seats BIGINT, wifi_access TINYINT(1), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX company_id_idx (company_id), INDEX last_modified_by_idx (last_modified_by), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE company_detail_sr (id BIGINT AUTO_INCREMENT, company_id BIGINT NOT NULL, internal_id BIGINT NOT NULL, full_company_name VARCHAR(255), sr_url VARCHAR(255), INDEX company_id_idx (company_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE company_extra (id BIGINT AUTO_INCREMENT, company_id BIGINT, establishment_date VARCHAR(255), registration_date VARCHAR(255), company_form VARCHAR(255), business_type VARCHAR(255), nace_code VARCHAR(255), personal_abount VARCHAR(255), personal_year VARCHAR(255), turnover VARCHAR(255), turnover_year VARCHAR(255), tax_reg VARCHAR(255), financial_risk VARCHAR(255), source VARCHAR(255), INDEX company_id_idx (company_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE company_feature_company (feature_id BIGINT, company_id BIGINT, PRIMARY KEY(feature_id, company_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE company_image (id BIGINT AUTO_INCREMENT, company_id BIGINT, image_id BIGINT, INDEX company_id_idx (company_id), INDEX image_id_idx (image_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE company_location (id BIGINT AUTO_INCREMENT, company_id BIGINT, accuracy TINYINT, is_active TINYINT(1), user_id BIGINT, location_type TINYINT DEFAULT 0, street_type_id BIGINT, street_number VARCHAR(255), street VARCHAR(255), neighbourhood VARCHAR(255), building_no VARCHAR(255), entrance VARCHAR(255), floor VARCHAR(255), appartment VARCHAR(255), postcode VARCHAR(255), full_address VARCHAR(255), full_address_en VARCHAR(255), address_info VARCHAR(255), address_info_en VARCHAR(255), zoom BIGINT, sublocation VARCHAR(255), geocode BIGINT, processed BIGINT, latitude DOUBLE(18, 2), longitude DOUBLE(18, 2), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX company_id_idx (company_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE company_offer_translation (id BIGINT, title VARCHAR(255), content TEXT, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE company_offer (id BIGINT AUTO_INCREMENT, company_id BIGINT, is_active TINYINT(1) DEFAULT '0', is_draft TINYINT(1) DEFAULT '0', active_from DATETIME, active_to DATETIME, valid_from DATETIME, valid_to DATETIME, max_vouchers BIGINT, max_per_user BIGINT, show_to_all TINYINT(1) DEFAULT '0', image_id BIGINT, code VARCHAR(36) NOT NULL, count_voucher_codes BIGINT DEFAULT 0, country_id BIGINT, created_by BIGINT, updated_by BIGINT, ad_service_company_id BIGINT, benefit_choice BIGINT, new_price FLOAT(18, 2), old_price FLOAT(18, 2), discount_pct BIGINT, benefit_text VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX company_id_idx (company_id), INDEX country_id_idx (country_id), INDEX image_id_idx (image_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX ad_service_company_id_idx (ad_service_company_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE page (id BIGINT AUTO_INCREMENT, is_public TINYINT(1) DEFAULT '1', url_alias VARCHAR(255), foreign_id BIGINT, country_id BIGINT, type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX alias_idx (url_alias), INDEX country_id_idx (country_id), INDEX foreign_id_idx (foreign_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE search (id BIGINT AUTO_INCREMENT, title TEXT, body TEXT, keywords TEXT, object_id BIGINT, culture VARCHAR(10), model_name VARCHAR(255), FULLTEXT INDEX search_idx (title, body, keywords), INDEX object_idx (object_id, model_name, culture), INDEX object_id_idx (object_id), PRIMARY KEY(id)) ENGINE = MyISAM;
CREATE TABLE company_stats (id BIGINT AUTO_INCREMENT, action_id BIGINT NOT NULL, company_id BIGINT NOT NULL, month DATE, views BIGINT DEFAULT 1, INDEX monthly_idx (action_id, company_id, month), INDEX allmonthly_idx (company_id, month), INDEX company_id_idx (company_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE company_status (id BIGINT AUTO_INCREMENT, user_id BIGINT, company_id BIGINT, text TEXT NOT NULL, publish_to VARCHAR(255), is_published TINYINT(1) DEFAULT '1', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX company_id_idx (company_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE conversation (id BIGINT AUTO_INCREMENT, page_from BIGINT, page_to BIGINT, opened TINYINT(1) DEFAULT '0', last_message_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX page_from_idx (page_from), INDEX page_to_idx (page_to), INDEX last_message_id_idx (last_message_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE country (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, name_en VARCHAR(255) NOT NULL, slug VARCHAR(255) NOT NULL, currency VARCHAR(3) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE county_translation (id BIGINT, name VARCHAR(255) NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE county (id BIGINT AUTO_INCREMENT, municipality VARCHAR(60), region VARCHAR(60), country_id BIGINT NOT NULL, slug VARCHAR(255) NOT NULL, INDEX country_id_idx (country_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE cover_image (id BIGINT AUTO_INCREMENT, company_id BIGINT, user_id BIGINT, filename VARCHAR(255), caption VARCHAR(255), status VARCHAR(255) DEFAULT 'approved', INDEX company_id_idx (company_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE cubes_login (id BIGINT AUTO_INCREMENT, user_id BIGINT, token VARCHAR(255), expires_at DATETIME, is_active TINYINT(1) DEFAULT '1', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE event_translation (id BIGINT, title VARCHAR(255) NOT NULL, description TEXT NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE event (id BIGINT AUTO_INCREMENT, start_at DATETIME, end_at DATETIME, start_h TIME, end_h TIME, category_id BIGINT, image_id BIGINT, facebook_id VARCHAR(50), info_url VARCHAR(255), buy_url VARCHAR(255), price TINYINT DEFAULT 0, location_id BIGINT, country_id BIGINT, user_id BIGINT, is_active TINYINT(1) DEFAULT '1', recommend TINYINT NOT NULL, recommended_at DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX recommended_idx (recommended_at), INDEX category_id_idx (category_id), INDEX country_id_idx (country_id), INDEX user_id_idx (user_id), INDEX location_id_idx (location_id), INDEX image_id_idx (image_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE event_image (id BIGINT AUTO_INCREMENT, event_id BIGINT, image_id BIGINT, INDEX event_id_idx (event_id), INDEX image_id_idx (image_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE event_invite (id BIGINT AUTO_INCREMENT, event_id BIGINT, user_id BIGINT, user_from BIGINT, replied TINYINT(1) DEFAULT '0', INDEX event_id_idx (event_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE event_page (id BIGINT AUTO_INCREMENT, event_id BIGINT, page_id BIGINT, INDEX event_id_idx (event_id), INDEX page_id_idx (page_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE event_user (id BIGINT AUTO_INCREMENT, event_id BIGINT, user_id BIGINT, confirm BIGINT DEFAULT 0 NOT NULL, INDEX event_id_idx (event_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE facebook_game (id BIGINT AUTO_INCREMENT, user_id BIGINT, question VARCHAR(255), answer VARCHAR(255), game VARCHAR(255), uid VARCHAR(255), party_name_id BIGINT, shared TINYINT(1) DEFAULT '0', INDEX user_id_idx (user_id), INDEX party_name_id_idx (party_name_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE facebook_review_game (id BIGINT AUTO_INCREMENT, slug VARCHAR(255), name VARCHAR(255), title VARCHAR(255), description TEXT, final_support_text TEXT, status VARCHAR(255) DEFAULT 'opened', winner BIGINT, intermediate_winners VARCHAR(250), lang VARCHAR(255) DEFAULT 'bg', INDEX winner_idx (winner), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE facebook_review_game_result (id BIGINT AUTO_INCREMENT, facebook_review_game_id BIGINT, param1 VARCHAR(255), param2 VARCHAR(255), INDEX facebook_review_game_id_idx (facebook_review_game_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE facebook_review_game_user (id BIGINT AUTO_INCREMENT, user_id BIGINT, facebook_review_game_id BIGINT, referer VARCHAR(255), points BIGINT DEFAULT 0, hash VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_hash_idx (hash), INDEX user_id_idx (user_id), INDEX facebook_review_game_id_idx (facebook_review_game_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE feature_translation (id BIGINT, name VARCHAR(60) NOT NULL, is_active TINYINT(1) DEFAULT '1', lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE feature (id BIGINT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'approved', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE feature_company_translation (id BIGINT, name VARCHAR(60) NOT NULL, is_active TINYINT(1) DEFAULT '1', lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE feature_company (id BIGINT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'approved', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE follow (id BIGINT AUTO_INCREMENT, user_id BIGINT, page_id BIGINT, status VARCHAR(255) DEFAULT 'one-way', from_value VARCHAR(255) DEFAULT 'site', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX page_id_idx (page_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE follow_page (id BIGINT AUTO_INCREMENT, user_id BIGINT, page_id BIGINT, email_notification TINYINT(1) DEFAULT '1', internal_notification TINYINT(1) DEFAULT '1', newsfeed TINYINT(1) DEFAULT '1', weekly_update TINYINT(1) DEFAULT '1', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX page_id_idx (page_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE geoip_countries (id BIGINT AUTO_INCREMENT, ip_from VARCHAR(255) NOT NULL, ip_to VARCHAR(255) NOT NULL, integer_from BIGINT NOT NULL, integer_to BIGINT NOT NULL, country_slugs VARCHAR(255) NOT NULL, country_names VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE image (id BIGINT AUTO_INCREMENT, user_id BIGINT, caption VARCHAR(255), status VARCHAR(255) DEFAULT 'approved', priority BIGINT DEFAULT 0, country_id BIGINT, type VARCHAR(255), link VARCHAR(255), description VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, filename VARCHAR(255), INDEX image_type_idx (type), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE likes (id BIGINT AUTO_INCREMENT, user_id BIGINT, activity_id BIGINT, ip VARCHAR(25), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX activity_id_idx (activity_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE list_image (id BIGINT AUTO_INCREMENT, list_id BIGINT, image_id BIGINT, INDEX list_id_idx (list_id), INDEX image_id_idx (image_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE list_page (id BIGINT AUTO_INCREMENT, list_id BIGINT, page_id BIGINT, user_id BIGINT, tip TEXT, rank INT DEFAULT 1, status VARCHAR(255) DEFAULT 'approved', INDEX list_id_idx (list_id), INDEX page_id_idx (page_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE lists_translation (id BIGINT, title VARCHAR(255), description TEXT NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE lists (id BIGINT AUTO_INCREMENT, user_id BIGINT, list_type VARCHAR(255), is_active TINYINT(1) DEFAULT '1', is_open TINYINT(1) DEFAULT '1', status VARCHAR(255) DEFAULT 'approved', country_id BIGINT, image_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX country_id_idx (country_id), INDEX image_id_idx (image_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE menu (id BIGINT AUTO_INCREMENT, company_id BIGINT, filename VARCHAR(255), name VARCHAR(255), INDEX company_id_idx (company_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE message (id BIGINT AUTO_INCREMENT, body TEXT, conversation_id BIGINT, page_id BIGINT, is_read TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX page_id_idx (page_id), INDEX conversation_id_idx (conversation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE mobile_log (id BIGINT AUTO_INCREMENT, user_id BIGINT, device VARCHAR(255), version VARCHAR(80), action VARCHAR(255), foreign_id BIGINT, lat VARCHAR(50), lng VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE mobile_news (id BIGINT AUTO_INCREMENT, title VARCHAR(255), line1 VARCHAR(255), line2 VARCHAR(255), link VARCHAR(255), rank INT, country_id BIGINT, is_active TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, filename VARCHAR(255), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE mobile_news_city (id BIGINT AUTO_INCREMENT, news_id BIGINT, city_id BIGINT, INDEX news_id_idx (news_id), INDEX city_id_idx (city_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE newsletter_translation (id BIGINT, name VARCHAR(255), description VARCHAR(255), lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE newsletter (id BIGINT AUTO_INCREMENT, is_active TINYINT(1) DEFAULT '0', mailchimp_group VARCHAR(255), country_id BIGINT, user_group VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX country_id_idx (country_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE newsletter_user (id BIGINT AUTO_INCREMENT, user_id BIGINT, newsletter_id BIGINT, is_active TINYINT(1) DEFAULT '1', INDEX newsletter_id_idx (newsletter_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE notification (id BIGINT AUTO_INCREMENT, page_id BIGINT, model_name TEXT NOT NULL, foreign_id BIGINT NOT NULL, is_read TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX page_id_idx (page_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE page (id BIGINT AUTO_INCREMENT, is_public TINYINT(1) DEFAULT '1', url_alias VARCHAR(255), foreign_id BIGINT, country_id BIGINT, type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX alias_idx (url_alias), INDEX page_type_idx (type), INDEX country_id_idx (country_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE page_admin (id BIGINT AUTO_INCREMENT, user_id BIGINT, page_id BIGINT, status VARCHAR(255) DEFAULT 'pending', position TINYINT, is_primary TINYINT(1) DEFAULT '1', username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX page_id_idx (page_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE party_name (id BIGINT AUTO_INCREMENT, name VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pilot_video (id BIGINT AUTO_INCREMENT, name VARCHAR(255), youtube_key VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE pilot_vote (id BIGINT AUTO_INCREMENT, user_id BIGINT, video_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX video_id_idx (video_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE place_feature (id BIGINT AUTO_INCREMENT, page_id BIGINT, voted_yes BIGINT, voted_no BIGINT, feature_id BIGINT, INDEX page_id_idx (page_id), INDEX feature_id_idx (feature_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE place_feature_vote (id BIGINT AUTO_INCREMENT, user_id BIGINT, place_feature_id BIGINT, vote TINYINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX place_feature_id_idx (place_feature_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE report (id BIGINT AUTO_INCREMENT, user_id BIGINT, email VARCHAR(255), name VARCHAR(255), body TEXT, offence VARCHAR(255), status VARCHAR(255) DEFAULT 'pending', object_id BIGINT, type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX report_type_idx (type), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE report (id BIGINT AUTO_INCREMENT, user_id BIGINT, email VARCHAR(255), name VARCHAR(255), body TEXT, offence VARCHAR(255), status VARCHAR(255) DEFAULT 'pending', object_id BIGINT, type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX object_id_idx (object_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE review (id BIGINT AUTO_INCREMENT, user_id BIGINT, company_id BIGINT, text TEXT NOT NULL, recommend TINYINT NOT NULL, rating TINYINT NOT NULL, badwords TINYINT(1), is_published TINYINT(1) DEFAULT '1', slug VARCHAR(255) NOT NULL, ip VARCHAR(50), promo_source INT DEFAULT 0, parent_id BIGINT, recommended_at DATETIME, referer VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX recommended_idx (recommended_at), INDEX user_id_idx (user_id), INDEX company_id_idx (company_id), INDEX parent_id_idx (parent_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE review_search (id BIGINT AUTO_INCREMENT, body TEXT, search_id BIGINT, FULLTEXT INDEX search_idx (body), INDEX search_id_idx (search_id), PRIMARY KEY(id)) ENGINE = MyISAM;
CREATE TABLE review_top (id BIGINT AUTO_INCREMENT, review_id BIGINT, country_id BIGINT, week_id BIGINT, count INT DEFAULT 0, INDEX review_id_idx (review_id), INDEX week_id_idx (week_id), INDEX country_id_idx (country_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE review_top_prize (id BIGINT AUTO_INCREMENT, name VARCHAR(255), name_en VARCHAR(255), description TEXT, description_en TEXT, place TINYINT DEFAULT 1, country_id BIGINT, week_id BIGINT, filename VARCHAR(255), INDEX week_id_idx (week_id), INDEX country_id_idx (country_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE review_top_week (id BIGINT AUTO_INCREMENT, time_from DATE, time_to DATE, top_type VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE review_voucher (id BIGINT AUTO_INCREMENT, user_id BIGINT, voucher VARCHAR(255) NOT NULL, week_id BIGINT NOT NULL, date_issued DATETIME, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE search (id BIGINT AUTO_INCREMENT, title TEXT, body TEXT, keywords TEXT, object_id BIGINT, culture VARCHAR(10), model_name VARCHAR(255), FULLTEXT INDEX search_idx (title, body, keywords), INDEX object_idx (object_id, model_name, culture), INDEX search_model_name_idx (model_name), PRIMARY KEY(id)) ENGINE = MyISAM;
CREATE TABLE search_history (id BIGINT AUTO_INCREMENT, word VARCHAR(255) NOT NULL, culture VARCHAR(50) DEFAULT 'en' NOT NULL, count INT DEFAULT 0, results_count INT DEFAULT 0, INDEX word_idx (word), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sector_translation (id BIGINT, rank INT, title VARCHAR(255) NOT NULL, slug VARCHAR(255), description LONGTEXT, page_title VARCHAR(255), meta_description LONGTEXT, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sector (id BIGINT AUTO_INCREMENT, is_active TINYINT(1) DEFAULT '1', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sector_feature (id BIGINT AUTO_INCREMENT, feature_id BIGINT, sector_id BIGINT, INDEX feature_id_idx (feature_id), INDEX sector_id_idx (sector_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sector_slug_log (id BIGINT AUTO_INCREMENT, sector_id BIGINT, lang CHAR(2), old_slug VARCHAR(255), INDEX sector_id_idx (sector_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE serbian_cities (id BIGINT AUTO_INCREMENT, city_id BIGINT, city_change VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX city_id_idx (city_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE serbian_names (id BIGINT AUTO_INCREMENT, name VARCHAR(255), suffix VARCHAR(255), gender VARCHAR(1), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE setting (id BIGINT AUTO_INCREMENT, k VARCHAR(255), val TEXT, INDEX k_idx (k), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sitemaps (id BIGINT AUTO_INCREMENT, sitemap VARCHAR(255), page BIGINT, country_id BIGINT, f_id BIGINT, l_id BIGINT, last_mod DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE slider (id BIGINT AUTO_INCREMENT, title VARCHAR(255), title_en VARCHAR(255), body TEXT, body_en TEXT, link VARCHAR(255), link_en VARCHAR(255), rank INT, country_id BIGINT, whole_country TINYINT(1), is_active TINYINT(1), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, filename VARCHAR(255), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE slider_city (id BIGINT AUTO_INCREMENT, slider_id BIGINT, city_id BIGINT, INDEX slider_id_idx (slider_id), INDEX city_id_idx (city_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE slider_sector (id BIGINT AUTO_INCREMENT, slider_id BIGINT, sector_id BIGINT, INDEX sector_id_idx (sector_id), INDEX slider_id_idx (slider_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE static_page_translation (id BIGINT, title VARCHAR(255), content TEXT, slug VARCHAR(255) NOT NULL, is_active TINYINT(1) NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE static_page (id BIGINT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'approved', country_id BIGINT, root_id BIGINT, lft INT, rgt INT, level SMALLINT, INDEX country_id_idx (country_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE unregistered_newsletter_user (id BIGINT AUTO_INCREMENT, firstname VARCHAR(255), lastname VARCHAR(255), email_address VARCHAR(128), country_id BIGINT, INDEX country_id_idx (country_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE url_map (id BIGINT AUTO_INCREMENT, old_url VARCHAR(255), new_url VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_badge (id BIGINT AUTO_INCREMENT, user_id BIGINT, badge_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX badge_id_idx (badge_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_profile (id BIGINT AUTO_INCREMENT, birthdate DATE, gender VARCHAR(1), phone_number VARCHAR(255) DEFAULT NULL, karma BIGINT DEFAULT 0, hash VARCHAR(255), facebook_uid VARCHAR(20), access_token VARCHAR(20), summary TEXT, city_id BIGINT, image_id BIGINT, blog_url VARCHAR(255), facebook_url VARCHAR(255), twitter_url VARCHAR(255), website VARCHAR(255), google_url VARCHAR(255), country_id BIGINT, partner INT DEFAULT 0, referer VARCHAR(255), points INT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX karma_idx (karma), INDEX city_id_idx (city_id), INDEX image_id_idx (image_id), INDEX country_id_idx (country_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE user_setting (id BIGINT AUTO_INCREMENT, show_profile TINYINT(1) DEFAULT '1', search_name TINYINT(1) DEFAULT '1', search_nickname TINYINT(1) DEFAULT '1', search_email TINYINT(1) DEFAULT '1', show_age TINYINT(1) DEFAULT '1', show_gender TINYINT(1) DEFAULT '1', show_online TINYINT(1) DEFAULT '1', public_comments TINYINT(1) DEFAULT '1', auto_comments TINYINT(1) DEFAULT '1', allow_contact TINYINT(1) DEFAULT '1', allow_localization TINYINT(1) DEFAULT '1', allow_newsletter TINYINT(1) DEFAULT '1', allow_b_cmc TINYINT(1) DEFAULT '0', allow_promo TINYINT(1) DEFAULT '0', underage TINYINT(1) DEFAULT '0', PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE user_stat (id BIGINT AUTO_INCREMENT, user_id BIGINT, keyname VARCHAR(255), keyvalue BIGINT, INDEX user_id_idx (user_id), INDEX keyname_idx (keyname), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_stat_key (id BIGINT AUTO_INCREMENT, keyname VARCHAR(255), name VARCHAR(255), type VARCHAR(255), weight INT DEFAULT 0, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE image (id BIGINT AUTO_INCREMENT, user_id BIGINT, caption VARCHAR(255), status VARCHAR(255) DEFAULT 'approved', priority BIGINT DEFAULT 0, country_id BIGINT, type VARCHAR(255), link VARCHAR(255), description VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, filename VARCHAR(255), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE voucher (id BIGINT AUTO_INCREMENT, user_id BIGINT, company_offer_id BIGINT, code VARCHAR(128), status VARCHAR(255) DEFAULT 'pending', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX company_offer_id_idx (company_offer_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE friend_list (id BIGINT AUTO_INCREMENT, user_id1 BIGINT, user_id2 BIGINT, INDEX user_id_idx (user_id1, user_id2), INDEX user_id2_idx (user_id2), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE get_weekend (id BIGINT AUTO_INCREMENT, title VARCHAR(255), title_en VARCHAR(255), body TEXT, body_en TEXT, embed VARCHAR(255), aired_on DATE, country_id BIGINT, is_active TINYINT(1), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, filename VARCHAR(255), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE get_weekend_company (id BIGINT AUTO_INCREMENT, parent_id BIGINT, company_id BIGINT, INDEX company_id_idx (company_id), INDEX parent_id_idx (parent_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE get_weekend_event (id BIGINT AUTO_INCREMENT, parent_id BIGINT, event_id BIGINT, INDEX event_id_idx (event_id), INDEX parent_id_idx (parent_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE invited_user (id BIGINT AUTO_INCREMENT, email VARCHAR(128), facebook_uid VARCHAR(20), hash VARCHAR(50), invited_from VARCHAR(255), points_to_invited INT, points_to_user INT, user_id BIGINT, INDEX user_data_idx (email, facebook_uid), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE mail_bg_campaign (id BIGINT AUTO_INCREMENT, company_id BIGINT, city_id BIGINT, is_active TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX company_index_idx (company_id), INDEX city_id_idx (city_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE activity ADD CONSTRAINT activity_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE activity ADD CONSTRAINT activity_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE activity ADD CONSTRAINT activity_media_id_image_id FOREIGN KEY (media_id) REFERENCES image(id) ON DELETE CASCADE;
ALTER TABLE activity ADD CONSTRAINT activity_action_id_article_id FOREIGN KEY (action_id) REFERENCES article(id);
ALTER TABLE activity ADD CONSTRAINT activity_activity_id_activity_id FOREIGN KEY (activity_id) REFERENCES activity(id) ON DELETE CASCADE;
ALTER TABLE activity ADD CONSTRAINT activity_action_id_comment_id FOREIGN KEY (action_id) REFERENCES comment(id);
ALTER TABLE activity ADD CONSTRAINT activity_action_id_company_offer_id FOREIGN KEY (action_id) REFERENCES company_offer(id);
ALTER TABLE activity ADD CONSTRAINT activity_action_id_event_id FOREIGN KEY (action_id) REFERENCES event(id);
ALTER TABLE activity ADD CONSTRAINT activity_action_id_follow_page_id FOREIGN KEY (action_id) REFERENCES follow_page(id);
ALTER TABLE activity ADD CONSTRAINT activity_action_id_lists_id FOREIGN KEY (action_id) REFERENCES lists(id);
ALTER TABLE activity ADD CONSTRAINT activity_action_id_list_page_id FOREIGN KEY (action_id) REFERENCES list_page(id);
ALTER TABLE activity ADD CONSTRAINT activity_action_id_page_id FOREIGN KEY (action_id) REFERENCES page(id);
ALTER TABLE activity ADD CONSTRAINT activity_action_id_review_id FOREIGN KEY (action_id) REFERENCES review(id);
ALTER TABLE ad_service_translation ADD CONSTRAINT ad_service_translation_id_ad_service_id FOREIGN KEY (id) REFERENCES ad_service(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ad_service_company ADD CONSTRAINT ad_service_company_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE ad_service_company ADD CONSTRAINT ad_service_company_ad_service_id_ad_service_id FOREIGN KEY (ad_service_id) REFERENCES ad_service(id) ON DELETE CASCADE;
ALTER TABLE admin_remember_key ADD CONSTRAINT admin_remember_key_page_admin_id_page_admin_id FOREIGN KEY (page_admin_id) REFERENCES page_admin(id) ON DELETE CASCADE;
ALTER TABLE api_login ADD CONSTRAINT api_login_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE article_translation ADD CONSTRAINT article_translation_id_article_id FOREIGN KEY (id) REFERENCES article(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE article ADD CONSTRAINT article_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE article ADD CONSTRAINT article_location_id_city_id FOREIGN KEY (location_id) REFERENCES city(id) ON DELETE CASCADE;
ALTER TABLE article ADD CONSTRAINT article_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE article_category ADD CONSTRAINT article_category_category_id_category_article_id FOREIGN KEY (category_id) REFERENCES category_article(id) ON DELETE CASCADE;
ALTER TABLE article_category ADD CONSTRAINT article_category_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE article_event ADD CONSTRAINT article_event_event_id_event_id FOREIGN KEY (event_id) REFERENCES event(id) ON DELETE CASCADE;
ALTER TABLE article_event ADD CONSTRAINT article_event_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE article_image ADD CONSTRAINT article_image_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE article_image ADD CONSTRAINT article_image_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE article_list ADD CONSTRAINT article_list_list_id_lists_id FOREIGN KEY (list_id) REFERENCES lists(id) ON DELETE CASCADE;
ALTER TABLE article_list ADD CONSTRAINT article_list_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE article_page ADD CONSTRAINT article_page_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE article_page ADD CONSTRAINT article_page_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE article_slug_log ADD CONSTRAINT article_slug_log_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE badge_translation ADD CONSTRAINT badge_translation_id_badge_id FOREIGN KEY (id) REFERENCES badge(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE badge_requirement ADD CONSTRAINT badge_requirement_badge_id_badge_id FOREIGN KEY (badge_id) REFERENCES badge(id) ON DELETE CASCADE;
ALTER TABLE badge_requirement_field ADD CONSTRAINT badge_requirement_field_requirement_id_badge_requirement_id FOREIGN KEY (requirement_id) REFERENCES badge_requirement(id) ON DELETE CASCADE;
ALTER TABLE box_to_zone ADD CONSTRAINT box_to_zone_box_id_box_id FOREIGN KEY (box_id) REFERENCES box(id) ON DELETE CASCADE;
ALTER TABLE category_translation ADD CONSTRAINT category_translation_id_category_id FOREIGN KEY (id) REFERENCES category(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE category_article_translation ADD CONSTRAINT category_article_translation_id_category_article_id FOREIGN KEY (id) REFERENCES category_article(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE category_article_classification ADD CONSTRAINT category_article_classification_category_id_category_article_id FOREIGN KEY (category_id) REFERENCES category_article(id);
ALTER TABLE category_article_country ADD CONSTRAINT category_article_country_category_id_category_article_id FOREIGN KEY (category_id) REFERENCES category_article(id);
ALTER TABLE category_classification ADD CONSTRAINT category_classification_classification_id_classification_id FOREIGN KEY (classification_id) REFERENCES classification(id) ON DELETE CASCADE;
ALTER TABLE category_classification ADD CONSTRAINT category_classification_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE CASCADE;
ALTER TABLE category_sector ADD CONSTRAINT category_sector_sector_id_sector_id FOREIGN KEY (sector_id) REFERENCES sector(id) ON DELETE CASCADE;
ALTER TABLE category_sector ADD CONSTRAINT category_sector_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE CASCADE;
ALTER TABLE check_in ADD CONSTRAINT check_in_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE check_in_status ADD CONSTRAINT check_in_status_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE city_translation ADD CONSTRAINT city_translation_id_city_id FOREIGN KEY (id) REFERENCES city(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE city ADD CONSTRAINT city_county_id_county_id FOREIGN KEY (county_id) REFERENCES county(id) ON DELETE CASCADE;
ALTER TABLE classification_translation ADD CONSTRAINT classification_translation_id_classification_id FOREIGN KEY (id) REFERENCES classification(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE classification ADD CONSTRAINT classification_sector_id_sector_id FOREIGN KEY (sector_id) REFERENCES sector(id) ON DELETE CASCADE;
ALTER TABLE classification ADD CONSTRAINT classification_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE CASCADE;
ALTER TABLE classification_sector ADD CONSTRAINT classification_sector_sector_id_sector_id FOREIGN KEY (sector_id) REFERENCES sector(id) ON DELETE CASCADE;
ALTER TABLE classification_sector ADD CONSTRAINT classification_sector_classification_id_classification_id FOREIGN KEY (classification_id) REFERENCES classification(id) ON DELETE CASCADE;
ALTER TABLE classification_slug_log ADD CONSTRAINT classification_slug_log_classification_id_classification_id FOREIGN KEY (classification_id) REFERENCES classification(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_parent_id_comment_id FOREIGN KEY (parent_id) REFERENCES comment(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_activity_id_activity_id FOREIGN KEY (activity_id) REFERENCES activity(id) ON DELETE CASCADE;
ALTER TABLE company_translation ADD CONSTRAINT company_translation_id_company_id FOREIGN KEY (id) REFERENCES company(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE company ADD CONSTRAINT company_sector_id_sector_id FOREIGN KEY (sector_id) REFERENCES sector(id) ON DELETE CASCADE;
ALTER TABLE company ADD CONSTRAINT company_review_id_review_id FOREIGN KEY (review_id) REFERENCES review(id) ON DELETE SET NULL;
ALTER TABLE company ADD CONSTRAINT company_logo_image_id_image_id FOREIGN KEY (logo_image_id) REFERENCES image(id) ON DELETE SET NULL;
ALTER TABLE company ADD CONSTRAINT company_location_id_company_location_id FOREIGN KEY (location_id) REFERENCES company_location(id) ON DELETE CASCADE;
ALTER TABLE company ADD CONSTRAINT company_last_modified_by_user_profile_id FOREIGN KEY (last_modified_by) REFERENCES user_profile(id) ON DELETE SET NULL;
ALTER TABLE company ADD CONSTRAINT company_image_id_image_id FOREIGN KEY (image_id) REFERENCES image(id) ON DELETE SET NULL;
ALTER TABLE company ADD CONSTRAINT company_created_by_user_profile_id FOREIGN KEY (created_by) REFERENCES user_profile(id) ON DELETE SET NULL;
ALTER TABLE company ADD CONSTRAINT company_cover_image_id_cover_image_id FOREIGN KEY (cover_image_id) REFERENCES cover_image(id) ON DELETE SET NULL;
ALTER TABLE company ADD CONSTRAINT company_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE company ADD CONSTRAINT company_classification_id_classification_id FOREIGN KEY (classification_id) REFERENCES classification(id) ON DELETE CASCADE;
ALTER TABLE company ADD CONSTRAINT company_city_id_city_id FOREIGN KEY (city_id) REFERENCES city(id) ON DELETE CASCADE;
ALTER TABLE company_classification ADD CONSTRAINT company_classification_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE company_classification ADD CONSTRAINT company_classification_classification_id_classification_id FOREIGN KEY (classification_id) REFERENCES classification(id) ON DELETE CASCADE;
ALTER TABLE company_detail ADD CONSTRAINT company_detail_last_modified_by_user_profile_id FOREIGN KEY (last_modified_by) REFERENCES user_profile(id) ON DELETE SET NULL;
ALTER TABLE company_detail ADD CONSTRAINT company_detail_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE company_detail_sr ADD CONSTRAINT company_detail_sr_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE company_extra ADD CONSTRAINT company_extra_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE company_feature_company ADD CONSTRAINT company_feature_company_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id);
ALTER TABLE company_image ADD CONSTRAINT company_image_image_id_image_id FOREIGN KEY (image_id) REFERENCES image(id) ON DELETE CASCADE;
ALTER TABLE company_image ADD CONSTRAINT company_image_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE company_location ADD CONSTRAINT company_location_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE SET NULL;
ALTER TABLE company_location ADD CONSTRAINT company_location_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE company_offer_translation ADD CONSTRAINT company_offer_translation_id_company_offer_id FOREIGN KEY (id) REFERENCES company_offer(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE company_offer ADD CONSTRAINT company_offer_updated_by_user_profile_id FOREIGN KEY (updated_by) REFERENCES user_profile(id) ON DELETE NO ACTION;
ALTER TABLE company_offer ADD CONSTRAINT company_offer_image_id_image_id FOREIGN KEY (image_id) REFERENCES image(id) ON DELETE SET NULL;
ALTER TABLE company_offer ADD CONSTRAINT company_offer_created_by_user_profile_id FOREIGN KEY (created_by) REFERENCES user_profile(id) ON DELETE NO ACTION;
ALTER TABLE company_offer ADD CONSTRAINT company_offer_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE company_offer ADD CONSTRAINT company_offer_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE company_offer ADD CONSTRAINT company_offer_ad_service_company_id_ad_service_company_id FOREIGN KEY (ad_service_company_id) REFERENCES ad_service_company(id) ON DELETE NO ACTION;
ALTER TABLE page ADD CONSTRAINT page_foreign_id_company_id FOREIGN KEY (foreign_id) REFERENCES company(id);
ALTER TABLE page ADD CONSTRAINT page_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE search ADD CONSTRAINT search_object_id_company_id FOREIGN KEY (object_id) REFERENCES company(id);
ALTER TABLE company_stats ADD CONSTRAINT company_stats_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE company_status ADD CONSTRAINT company_status_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE NO ACTION;
ALTER TABLE company_status ADD CONSTRAINT company_status_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE conversation ADD CONSTRAINT conversation_page_to_page_id FOREIGN KEY (page_to) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE conversation ADD CONSTRAINT conversation_page_from_page_id FOREIGN KEY (page_from) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE conversation ADD CONSTRAINT conversation_last_message_id_message_id FOREIGN KEY (last_message_id) REFERENCES message(id) ON DELETE CASCADE;
ALTER TABLE county_translation ADD CONSTRAINT county_translation_id_county_id FOREIGN KEY (id) REFERENCES county(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE county ADD CONSTRAINT county_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE cover_image ADD CONSTRAINT cover_image_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE SET NULL;
ALTER TABLE cover_image ADD CONSTRAINT cover_image_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE cubes_login ADD CONSTRAINT cubes_login_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE event_translation ADD CONSTRAINT event_translation_id_event_id FOREIGN KEY (id) REFERENCES event(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE event ADD CONSTRAINT event_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE event ADD CONSTRAINT event_location_id_city_id FOREIGN KEY (location_id) REFERENCES city(id) ON DELETE CASCADE;
ALTER TABLE event ADD CONSTRAINT event_image_id_image_id FOREIGN KEY (image_id) REFERENCES image(id) ON DELETE SET NULL;
ALTER TABLE event ADD CONSTRAINT event_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE event ADD CONSTRAINT event_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE CASCADE;
ALTER TABLE event_image ADD CONSTRAINT event_image_image_id_image_id FOREIGN KEY (image_id) REFERENCES image(id) ON DELETE CASCADE;
ALTER TABLE event_image ADD CONSTRAINT event_image_event_id_event_id FOREIGN KEY (event_id) REFERENCES event(id) ON DELETE CASCADE;
ALTER TABLE event_invite ADD CONSTRAINT event_invite_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE event_invite ADD CONSTRAINT event_invite_event_id_event_id FOREIGN KEY (event_id) REFERENCES event(id) ON DELETE CASCADE;
ALTER TABLE event_page ADD CONSTRAINT event_page_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE event_page ADD CONSTRAINT event_page_event_id_event_id FOREIGN KEY (event_id) REFERENCES event(id) ON DELETE CASCADE;
ALTER TABLE search ADD CONSTRAINT search_object_id_event_id FOREIGN KEY (object_id) REFERENCES event(id);
ALTER TABLE event_user ADD CONSTRAINT event_user_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE event_user ADD CONSTRAINT event_user_event_id_event_id FOREIGN KEY (event_id) REFERENCES event(id) ON DELETE CASCADE;
ALTER TABLE facebook_game ADD CONSTRAINT facebook_game_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE facebook_game ADD CONSTRAINT facebook_game_party_name_id_party_name_id FOREIGN KEY (party_name_id) REFERENCES party_name(id) ON DELETE CASCADE;
ALTER TABLE facebook_review_game ADD CONSTRAINT facebook_review_game_winner_user_profile_id FOREIGN KEY (winner) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE facebook_review_game_result ADD CONSTRAINT fffi FOREIGN KEY (facebook_review_game_id) REFERENCES facebook_review_game(id) ON DELETE CASCADE;
ALTER TABLE facebook_review_game_user ADD CONSTRAINT fffi_1 FOREIGN KEY (facebook_review_game_id) REFERENCES facebook_review_game(id) ON DELETE CASCADE;
ALTER TABLE facebook_review_game_user ADD CONSTRAINT facebook_review_game_user_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE feature_translation ADD CONSTRAINT feature_translation_id_feature_id FOREIGN KEY (id) REFERENCES feature(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE feature_company_translation ADD CONSTRAINT feature_company_translation_id_feature_company_id FOREIGN KEY (id) REFERENCES feature_company(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE follow ADD CONSTRAINT follow_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE follow ADD CONSTRAINT follow_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE follow_page ADD CONSTRAINT follow_page_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE follow_page ADD CONSTRAINT follow_page_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE image ADD CONSTRAINT image_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE likes ADD CONSTRAINT likes_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE likes ADD CONSTRAINT likes_activity_id_activity_id FOREIGN KEY (activity_id) REFERENCES activity(id) ON DELETE CASCADE;
ALTER TABLE list_image ADD CONSTRAINT list_image_list_id_lists_id FOREIGN KEY (list_id) REFERENCES lists(id) ON DELETE CASCADE;
ALTER TABLE list_image ADD CONSTRAINT list_image_image_id_image_id FOREIGN KEY (image_id) REFERENCES image(id) ON DELETE CASCADE;
ALTER TABLE list_page ADD CONSTRAINT list_page_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE list_page ADD CONSTRAINT list_page_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE list_page ADD CONSTRAINT list_page_list_id_lists_id FOREIGN KEY (list_id) REFERENCES lists(id) ON DELETE CASCADE;
ALTER TABLE lists_translation ADD CONSTRAINT lists_translation_id_lists_id FOREIGN KEY (id) REFERENCES lists(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE lists ADD CONSTRAINT lists_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE lists ADD CONSTRAINT lists_image_id_image_id FOREIGN KEY (image_id) REFERENCES image(id) ON DELETE SET NULL;
ALTER TABLE lists ADD CONSTRAINT lists_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE menu ADD CONSTRAINT menu_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE message ADD CONSTRAINT message_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE message ADD CONSTRAINT message_conversation_id_conversation_id FOREIGN KEY (conversation_id) REFERENCES conversation(id) ON DELETE CASCADE;
ALTER TABLE mobile_log ADD CONSTRAINT mobile_log_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE mobile_news_city ADD CONSTRAINT mobile_news_city_news_id_mobile_news_id FOREIGN KEY (news_id) REFERENCES mobile_news(id) ON DELETE CASCADE;
ALTER TABLE mobile_news_city ADD CONSTRAINT mobile_news_city_city_id_city_id FOREIGN KEY (city_id) REFERENCES city(id) ON DELETE CASCADE;
ALTER TABLE newsletter_translation ADD CONSTRAINT newsletter_translation_id_newsletter_id FOREIGN KEY (id) REFERENCES newsletter(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE newsletter ADD CONSTRAINT newsletter_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE newsletter_user ADD CONSTRAINT newsletter_user_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE newsletter_user ADD CONSTRAINT newsletter_user_newsletter_id_newsletter_id FOREIGN KEY (newsletter_id) REFERENCES newsletter(id) ON DELETE CASCADE;
ALTER TABLE notification ADD CONSTRAINT notification_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE page_admin ADD CONSTRAINT page_admin_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE page_admin ADD CONSTRAINT page_admin_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE pilot_vote ADD CONSTRAINT pilot_vote_video_id_pilot_video_id FOREIGN KEY (video_id) REFERENCES pilot_video(id) ON DELETE CASCADE;
ALTER TABLE pilot_vote ADD CONSTRAINT pilot_vote_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE place_feature ADD CONSTRAINT place_feature_page_id_page_id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE;
ALTER TABLE place_feature ADD CONSTRAINT place_feature_feature_id_feature_id FOREIGN KEY (feature_id) REFERENCES feature(id) ON DELETE CASCADE;
ALTER TABLE place_feature_vote ADD CONSTRAINT place_feature_vote_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE place_feature_vote ADD CONSTRAINT place_feature_vote_place_feature_id_place_feature_id FOREIGN KEY (place_feature_id) REFERENCES place_feature(id) ON DELETE CASCADE;
ALTER TABLE report ADD CONSTRAINT report_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE SET NULL;
ALTER TABLE report ADD CONSTRAINT report_object_id_company_id FOREIGN KEY (object_id) REFERENCES company(id);
ALTER TABLE report ADD CONSTRAINT report_object_id_image_id FOREIGN KEY (object_id) REFERENCES image(id);
ALTER TABLE report ADD CONSTRAINT report_object_id_review_id FOREIGN KEY (object_id) REFERENCES review(id);
ALTER TABLE review ADD CONSTRAINT review_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE NO ACTION;
ALTER TABLE review ADD CONSTRAINT review_parent_id_review_id FOREIGN KEY (parent_id) REFERENCES review(id) ON DELETE CASCADE;
ALTER TABLE review ADD CONSTRAINT review_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE review_search ADD CONSTRAINT review_search_search_id_search_id FOREIGN KEY (search_id) REFERENCES search(id);
ALTER TABLE review_top ADD CONSTRAINT review_top_week_id_review_top_week_id FOREIGN KEY (week_id) REFERENCES review_top_week(id) ON DELETE CASCADE;
ALTER TABLE review_top ADD CONSTRAINT review_top_review_id_review_id FOREIGN KEY (review_id) REFERENCES review(id) ON DELETE CASCADE;
ALTER TABLE review_top ADD CONSTRAINT review_top_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE review_top_prize ADD CONSTRAINT review_top_prize_week_id_review_top_week_id FOREIGN KEY (week_id) REFERENCES review_top_week(id) ON DELETE CASCADE;
ALTER TABLE review_top_prize ADD CONSTRAINT review_top_prize_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE review_voucher ADD CONSTRAINT review_voucher_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE NO ACTION;
ALTER TABLE sector_translation ADD CONSTRAINT sector_translation_id_sector_id FOREIGN KEY (id) REFERENCES sector(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE sector_feature ADD CONSTRAINT sector_feature_sector_id_sector_id FOREIGN KEY (sector_id) REFERENCES sector(id) ON DELETE CASCADE;
ALTER TABLE sector_feature ADD CONSTRAINT sector_feature_feature_id_feature_id FOREIGN KEY (feature_id) REFERENCES feature(id) ON DELETE CASCADE;
ALTER TABLE sector_slug_log ADD CONSTRAINT sector_slug_log_sector_id_sector_id FOREIGN KEY (sector_id) REFERENCES sector(id) ON DELETE CASCADE;
ALTER TABLE serbian_cities ADD CONSTRAINT serbian_cities_city_id_city_id FOREIGN KEY (city_id) REFERENCES city(id) ON DELETE CASCADE;
ALTER TABLE slider_city ADD CONSTRAINT slider_city_slider_id_slider_id FOREIGN KEY (slider_id) REFERENCES slider(id) ON DELETE CASCADE;
ALTER TABLE slider_city ADD CONSTRAINT slider_city_city_id_city_id FOREIGN KEY (city_id) REFERENCES city(id) ON DELETE CASCADE;
ALTER TABLE slider_sector ADD CONSTRAINT slider_sector_slider_id_slider_id FOREIGN KEY (slider_id) REFERENCES slider(id) ON DELETE CASCADE;
ALTER TABLE slider_sector ADD CONSTRAINT slider_sector_sector_id_sector_id FOREIGN KEY (sector_id) REFERENCES sector(id) ON DELETE CASCADE;
ALTER TABLE static_page_translation ADD CONSTRAINT static_page_translation_id_static_page_id FOREIGN KEY (id) REFERENCES static_page(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE static_page ADD CONSTRAINT static_page_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE unregistered_newsletter_user ADD CONSTRAINT unregistered_newsletter_user_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE user_badge ADD CONSTRAINT user_badge_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE user_badge ADD CONSTRAINT user_badge_badge_id_badge_id FOREIGN KEY (badge_id) REFERENCES badge(id) ON DELETE CASCADE;
ALTER TABLE page ADD CONSTRAINT page_foreign_id_user_profile_id FOREIGN KEY (foreign_id) REFERENCES user_profile(id);
ALTER TABLE user_profile ADD CONSTRAINT user_profile_image_id_image_id FOREIGN KEY (image_id) REFERENCES image(id) ON DELETE CASCADE;
ALTER TABLE user_profile ADD CONSTRAINT user_profile_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE;
ALTER TABLE user_profile ADD CONSTRAINT user_profile_city_id_city_id FOREIGN KEY (city_id) REFERENCES city(id) ON DELETE CASCADE;
ALTER TABLE user_stat ADD CONSTRAINT user_stat_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE user_stat ADD CONSTRAINT user_stat_keyname_badge_requirement_field_keyname FOREIGN KEY (keyname) REFERENCES badge_requirement_field(keyname);
ALTER TABLE voucher ADD CONSTRAINT voucher_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE NO ACTION;
ALTER TABLE voucher ADD CONSTRAINT voucher_company_offer_id_company_offer_id FOREIGN KEY (company_offer_id) REFERENCES company_offer(id) ON DELETE NO ACTION;
ALTER TABLE friend_list ADD CONSTRAINT friend_list_user_id2_user_profile_id FOREIGN KEY (user_id2) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE get_weekend_company ADD CONSTRAINT get_weekend_company_parent_id_get_weekend_id FOREIGN KEY (parent_id) REFERENCES get_weekend(id) ON DELETE CASCADE;
ALTER TABLE get_weekend_company ADD CONSTRAINT get_weekend_company_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE get_weekend_event ADD CONSTRAINT get_weekend_event_parent_id_get_weekend_id FOREIGN KEY (parent_id) REFERENCES get_weekend(id) ON DELETE CASCADE;
ALTER TABLE get_weekend_event ADD CONSTRAINT get_weekend_event_event_id_event_id FOREIGN KEY (event_id) REFERENCES event(id) ON DELETE CASCADE;
ALTER TABLE invited_user ADD CONSTRAINT invited_user_user_id_user_profile_id FOREIGN KEY (user_id) REFERENCES user_profile(id) ON DELETE CASCADE;
ALTER TABLE mail_bg_campaign ADD CONSTRAINT mail_bg_campaign_company_id_company_id FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE;
ALTER TABLE mail_bg_campaign ADD CONSTRAINT mail_bg_campaign_city_id_city_id FOREIGN KEY (city_id) REFERENCES city(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
