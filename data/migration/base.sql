DROP FUNCTION IF EXISTS `slugify`;
DELIMITER ;;
CREATE DEFINER=`getlokal`@`localhost`
FUNCTION `slugify`(dirty_string varchar(255) CHARSET utf8) RETURNS varchar(255) CHARSET utf8 DETERMINISTIC BEGIN
  DECLARE x, y , z Int;
  Declare temp_string, allowed_chars, new_string VarChar(200) CHARSET utf8;
  Declare is_allowed Bool;
  Declare c, check_char VarChar(1) CHARSET utf8;
  
  set names utf8 collate utf8_unicode_ci;
  set allowed_chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-";
  set temp_string = dirty_string;

  Select temp_string Regexp('&') Into x;
  If x = 1 Then
    Set temp_string = replace(temp_string, '&', ' si ');
  End If;
  
  Set temp_string = LCASE(temp_string);
  Set temp_string = replace(temp_string, 'ţ', 't');
  Set temp_string = replace(temp_string, 'ş', 's');
  Set temp_string = replace(temp_string, 'ă', 'a');
  Set temp_string = replace(temp_string, 'â', 'a');
  Set temp_string = replace(temp_string, 'î', 'i');


  Select temp_string Regexp('[^a-z0-9]+') into x;
  If x = 1 then
    set z = 1;
    While z <= Char_length(temp_string) Do
      Set c = Substring(temp_string, z, 1);
      Set is_allowed = False;
      Set y = 1;
      Inner_Check: While y <= Char_length(allowed_chars) Do
        If (strCmp(ascii(Substring(allowed_chars,y,1)), Ascii(c)) = 0) Then
          Set is_allowed = True;
          Leave Inner_Check;
        End If;
        Set y = y + 1;
      End While;
      If is_allowed = False Then
        Set temp_string = Replace(temp_string, c, '-');
      End If;

      set z = z + 1;
    End While;
  End If;

  Select temp_string Regexp("^-|-$|'") into x;
  If x = 1 Then
    Set temp_string = Replace(temp_string, "'", '');
    Set z = Char_length(temp_string);
    Set y = Char_length(temp_string);
    Dash_check: While z > 1 Do
      If Strcmp(SubString(temp_string, -1, 1), '-') = 0 Then
        Set temp_string = Substring(temp_string,1, y-1);
        Set y = y - 1;
      Else
        Leave Dash_check;
      End If;
      Set z = z - 1;
    End While;
  End If;

  Repeat
    Select temp_string Regexp("--") into x;
    If x = 1 Then
      Set temp_string = Replace(temp_string, "--", "-");
    End If;
  Until x <> 1 End Repeat;

  Return temp_string;
END;;
DELIMITER ;

DELIMITER ;;
CREATE DEFINER=`getlokal`@`localhost`
FUNCTION `index_search`(dirty_string text CHARSET utf8) RETURNS text CHARSET utf8 DETERMINISTIC BEGIN
  DECLARE x, y , z Int;
  Declare temp_string, allowed_chars, new_string VarChar(200) CHARSET utf8;
  Declare is_allowed Bool;
  Declare c, check_char VarChar(1) CHARSET utf8;
  
  set names utf8 collate utf8_unicode_ci;
  set temp_string = dirty_string;
  
  Set temp_string = LCASE(temp_string);
  Set temp_string = replace(temp_string, '_', '');
  Set temp_string = replace(temp_string, '-', '');
  Set temp_string = replace(temp_string, "'", '');
  Set temp_string = replace(temp_string, '"', '');
  Set temp_string = replace(temp_string, ',', '');
  Set temp_string = replace(temp_string, '  ', ' ');
  Set temp_string = replace(temp_string, 'ţ', 't');
  Set temp_string = replace(temp_string, 'ş', 's');
  Set temp_string = replace(temp_string, 'ă', 'a');
  Set temp_string = replace(temp_string, 'â', 'a');
  Set temp_string = replace(temp_string, 'î', 'i');

  Return temp_string;
END;;
DELIMITER ;

ALTER TABLE `city` ADD  `old_id` INT NOT NULL;


INSERT INTO `country` VALUES (2 ,  'Romania',  'Romania',  'ro',  'RON');
INSERT INTO `country` VALUES (1 ,  'Bulgaria',  'Bulgaria',  'bg',  'LVN');

INSERT INTO county SELECT NULL, province, municipality, region, IF(country = 'RO',2 ,1) FROM gl_import.locations GROUP BY province;
INSERT INTO city 
  (`id`, `name`, `slug`, `county_id`, `old_id`)
  SELECT NULL, l.location_name, l.slug, c.id, l.id FROM gl_import.locations l INNER JOIN county c ON c.name = l.province;

INSERT IGNORE INTO company 
  (`id`, `external_id`, `title`, `title_en`, `description`, `description_en`, `email`, `phone`, `website_url`, `city_id`, `company_type`, `company_number`, `parent_external_id`, `is_validated`, `status`, `number_of_reviews`, `average_rating`, `is_address_modified`, `facebook_url`, `registration_no`, `updated_crm`, `date_mod_crm`, `created_by`, `created_at`, `updated_at`, `slug`)
  SELECT NULL, guid, title_bg, title_en, '', '', email, phone, url, c.id, company_type, company_number, parent_guid, is_validated, status, 0, 0, is_address_modified, facebook_url, bulstat, updated_crm, date_mod_crm, NULL, co.created_at, co.updated_at, co.slug
  FROM gl_import.company co
  INNER JOIN city c ON c.old_id = city;
  
UPDATE company c INNER JOIN gl_import.company_detail d ON d.company_guid = c.external_id SET description = desc_bg, description_en = desc_en;
  
INSERT INTO company_detail
  SELECT NULL, c.id, `mon_from`, `mon_to`, `tue_from`, `tue_to`, `wed_from`, `wed_to`, `thu_from`, `thu_to`, `fri_from`, `fri_to`, `sat_from`, `sat_to`, `sun_from`, `sun_to`, `content_bg`, `content_en`, confirmed, d.updated_at, d.updated_at
  FROM gl_import.company_detail d
  INNER JOIN company c ON c.external_id = d.company_guid;

ALTER TABLE  `company_location` CHANGE  `latitude`  `latitude` DOUBLE( 18, 10 ) NULL DEFAULT NULL , CHANGE  `longitude`  `longitude` DOUBLE( 18, 10 ) NULL DEFAULT NULL;
  
INSERT INTO company_location
  SELECT NULL, c.id, geocode_precision, 1, NULL, `location_type`, street_type, street_number, street, neighbourhood, bl, ent, fl, appartment, postcode, 3, 0+latitude, 0+longtitude, d.created_at, d.updated_at
  FROM gl_import.company d
  INNER JOIN company c ON c.external_id = d.guid;
  
UPDATE company c INNER JOIN company_location cl ON cl.company_id = c.id SET c.location_id = cl.id WHERE c.location_id IS NULL;
UPDATE company c SET c.location_id = (SELECT cl.id FROM company_location cl WHERE cl.company_id = c.id) WHERE c.location_id IS NULL;
ALTER TABLE  `page` DROP FOREIGN KEY  `page_foreign_id_user_profile_id` ;

INSERT INTO `page`(`id`, `is_public`, `url_alias`, `foreign_id`, `country_id`, `type`, `created_at`, `updated_at`) 
  SELECT NULL,1, slug, id, 1, 2, now(), now() FROM company;


ALTER TABLE  `sf_guard_user` CHANGE  `first_name`  `first_name` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL ,
CHANGE  `last_name`  `last_name` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL ,
CHANGE  `email_address`  `email_address` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL ,
CHANGE  `username`  `username` VARCHAR( 128 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL ,
CHANGE  `algorithm`  `algorithm` VARCHAR( 128 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL DEFAULT  'sha1',
CHANGE  `salt`  `salt` VARCHAR( 128 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL ,
CHANGE  `password`  `password` VARCHAR( 128 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL;

INSERT IGNORE sf_guard_user 
SELECT 
  sf.`id`, p.first_name, p.last_name, p.email, `username`, `algorithm`, `salt`, `password`, `is_active`, `is_super_admin`, `last_login`, sf.`created_at`, p.`updated_at`
FROM gl_import.sf_guard_user sf
INNER JOIN gl_import.sf_guard_user_profile p ON p.user_id = sf.id;

INSERT INTO user_profile 
(`id`, `birthdate`, `gender`, `phone_number`, `karma`, `hash`, `facebook_uid`, `access_token`, `summary`, `city_id`, `image_id`, `blog_url`, `facebook_url`, `twitter_url`, `website`, `google_url`, `country_id`, `created_at`, `updated_at`)
SELECT 
  user_id, birthdate, sex, phone_number, karma, email_hash, facebook_uid, '', summary, c.id, NULL, feed_url, facebook_url, twitter_url, '', '', if(country = 'RO', 1, 2), p.created_at, p.updated_at
FROM gl_import.sf_guard_user_profile p LEFT JOIN city c ON c.old_id = city INNER JOIN sf_guard_user sf ON sf.id= user_id;


INSERT page_admin
(`id`, `user_id`, `page_id`, `status`, `position`, `is_primary`, `created_at`, `updated_at`)
SELECT null, c.user_id, p.id, 'approved', 1, 1, now(), now()
 FROM gl_import.company c INNER JOIN company cc ON cc.external_id = c.guid INNER JOIN page p ON p.foreign_id = cc.id INNER JOIN user_profile u ON u.id = c.user_id WHERE c.user_id > 0;

INSERT INTO `sector` (`id`, `is_active`, `rank`, `created_at`, `updated_at`) VALUES
(1, 1, 18, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(2, 1, 10, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(3, 1, 19, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(4, 1, 9, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(5, 1, 11, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(6, 1, 4, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(7, 1, 2, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(8, 1, 1, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(9, 1, 20, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(10, 1, 5, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(11, 1, 21, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(12, 1, 14, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(13, 1, 15, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(14, 1, 13, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(15, 1, 12, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(16, 1, 26, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(17, 1, 8, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(18, 1, 3, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(19, 1, 27, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(20, 1, 16, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(21, 1, 22, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(22, 1, 25, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(23, 1, 24, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(24, 1, 7, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(25, 1, 6, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(26, 1, 17, '2012-04-19 00:00:00', '2012-04-19 00:00:00'),
(27, 1, 23, '2012-04-19 00:00:00', '2012-04-19 00:00:00');
ALTER TABLE  `classification` ADD  `ned_id` INT NOT NULL;
INSERT INTO `classification` (`id`, `external_id`, `category_id`, `sector_id`, `status`, `crm_id`, `created_at`, `updated_at`, `ned_id`) VALUES
(1, 'D4D70B4F-77E3-E011-AC70-00145E9525E4', 2, 20, '1', 0, '2011-10-20 10:32:37', '2011-10-20 10:32:37', 4208),
(2, 'B0B9118B-EEF3-E011-AC70-00145E9525E4', 17, 1, '1', 0, '2011-10-20 10:32:37', '2011-10-20 10:32:37', 4209),
(3, 'D547A98F-F0F3-E011-AC70-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:37', '2011-10-20 10:32:37', 4210),
(4, '3F401B26-F2F3-E011-AC70-00145E9525E4', 18, 1, '1', 0, '2011-10-20 10:32:37', '2011-10-20 10:32:37', 4211),
(5, '406766CA-F2F3-E011-AC70-00145E9525E4', 5, 1, '1', 0, '2011-10-20 10:32:37', '2011-10-20 10:32:37', 4212),
(6, '45487C57-F4F3-E011-AC70-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:37', '2011-10-20 10:32:37', 4213),
(7, '4CD3917B-40FA-E011-AC70-00145E9525E4', 5, 14, '1', 0, '2011-10-20 10:32:37', '2011-10-20 10:32:37', 4214),
(8, 'A44B6114-41FA-E011-AC70-00145E9525E4', 5, 14, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4215),
(9, '503DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 2, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4113),
(10, '513DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 24, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4114),
(11, '523DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 2, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4115),
(12, '91FE58A0-41FA-E011-AC70-00145E9525E4', 18, 15, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4216),
(13, '559C62A0-42FA-E011-AC70-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4217),
(14, '513C7DE5-43FA-E011-AC70-00145E9525E4', 5, 19, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4218),
(15, '9205B25A-44FA-E011-AC70-00145E9525E4', 5, 23, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4219),
(16, 'BF6C39A1-45FA-E011-AC70-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4220),
(17, '3009AB72-46FA-E011-AC70-00145E9525E4', 18, 15, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4221),
(18, 'EFB3515E-47FA-E011-AC70-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4222),
(19, '98AEB4D2-47FA-E011-AC70-00145E9525E4', 18, 21, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4223),
(20, 'E03CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4001),
(21, 'E13CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4002),
(22, 'E23CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4003),
(23, 'E33CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4004),
(24, 'E43CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 18, '1', 0, '2011-10-20 10:32:38', '2011-10-20 10:32:38', 4005),
(25, '063DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 10, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4039),
(26, '073DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 18, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4040),
(27, '083DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 20, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4041),
(28, '093DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 15, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4042),
(29, '0A3DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 1, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4043),
(30, '0B3DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 17, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4044),
(31, '0C3DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4045),
(32, '0D3DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4046),
(33, '0E3DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 20, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4047),
(34, '0F3DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 7, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4048),
(35, '103DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 5, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4049),
(36, '113DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 17, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4050),
(37, '123DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 10, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4051),
(38, '133DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 20, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4052),
(39, '143DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 5, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4053),
(40, '153DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 10, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4054),
(41, '163DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 17, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4055),
(42, '173DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 4, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4056),
(43, '183DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 4, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4057),
(44, '193DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4058),
(45, '1A3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4059),
(46, '1B3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4060),
(47, '1C3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4061),
(48, '1D3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 13, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4062),
(49, '1E3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4063),
(50, '1F3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4064),
(51, '203DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 13, '1', 0, '2011-10-20 10:32:43', '2011-10-20 10:32:43', 4065),
(52, '473DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4104),
(53, '483DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4105),
(54, '493DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 2, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4106),
(55, '4A3DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4107),
(56, '4B3DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 2, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4108),
(57, '4C3DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 2, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4109),
(58, '4D3DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 2, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4110),
(59, '213DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 10, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4066),
(60, '223DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4067),
(61, '233DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4068),
(62, '243DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4070),
(63, '253DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4071),
(64, '263DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4072),
(65, '273DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 13, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4073),
(66, '4E3DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 2, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4111),
(67, '4F3DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 2, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4112),
(68, '533DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 10, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4116),
(69, '553DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 4, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4117),
(70, '563DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 15, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4118),
(71, '7A3DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:51', '2011-10-20 10:32:51', 4153),
(72, '7B3DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 24, '1', 0, '2011-10-20 10:32:51', '2011-10-20 10:32:51', 4154),
(73, '7C3DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:51', '2011-10-20 10:32:51', 4155),
(74, '7D3DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 15, '1', 0, '2011-10-20 10:32:51', '2011-10-20 10:32:51', 4156),
(75, '7E3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 16, '1', 0, '2011-10-20 10:32:51', '2011-10-20 10:32:51', 4157),
(76, '7F3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 16, '1', 0, '2011-10-20 10:32:51', '2011-10-20 10:32:51', 4158),
(77, '803DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 16, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4159),
(78, '813DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4160),
(79, '823DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 23, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4161),
(80, '833DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 12, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4162),
(81, '843DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 19, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4163),
(82, '853DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4164),
(83, '863DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4165),
(84, '873DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4166),
(85, '883DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4167),
(86, '893DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 19, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4168),
(87, '8A3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 16, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4169),
(88, '8B3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, NULL, '1', 0, '2011-10-20 10:32:52', '2011-10-20 10:32:52', 4170),
(89, '8C3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:53', '2011-10-20 10:32:53', 4171),
(90, '8D3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 19, '1', 0, '2011-10-20 10:32:53', '2011-10-20 10:32:53', 4172),
(91, '8E3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:53', '2011-10-20 10:32:53', 4173),
(92, '8F3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:53', '2011-10-20 10:32:53', 4174),
(93, '903DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:53', '2011-10-20 10:32:53', 4175),
(94, '913DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:53', '2011-10-20 10:32:53', 4176),
(95, '923DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:53', '2011-10-20 10:32:53', 4177),
(96, '933DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:53', '2011-10-20 10:32:53', 4178),
(97, '943DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:53', '2011-10-20 10:32:53', 4179),
(98, '953DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 9, '1', 0, '2011-10-20 10:32:53', '2011-10-20 10:32:53', 4180),
(99, '963DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 9, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4182),
(100, '973DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4183),
(101, '983DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 15, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4184),
(102, '993DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 15, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4185),
(103, '9A3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 15, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4186),
(104, '9B3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 23, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4187),
(105, '9C3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 9, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4188),
(106, '9D3DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4189),
(107, '9E3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 26, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4190),
(108, 'A03DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4191),
(109, 'A13DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 3, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4192),
(110, 'A23DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:54', '2011-10-20 10:32:54', 4193),
(111, 'A33DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:55', '2011-10-20 10:32:55', 4194),
(112, 'A43DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 26, '1', 0, '2011-10-20 10:32:55', '2011-10-20 10:32:55', 4195),
(113, 'A53DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:55', '2011-10-20 10:32:55', 4197),
(114, 'A63DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:55', '2011-10-20 10:32:55', 4199),
(115, 'A73DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:55', '2011-10-20 10:32:55', 4200),
(116, 'A83DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:55', '2011-10-20 10:32:55', 4196),
(117, 'A93DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 3, '1', 0, '2011-10-20 10:32:55', '2011-10-20 10:32:55', 4198),
(118, 'AA3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:55', '2011-10-20 10:32:55', 4201),
(119, 'AB3DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 15, '1', 0, '2011-10-20 10:32:55', '2011-10-20 10:32:55', 4202),
(120, 'AC3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:56', '2011-10-20 10:32:56', 4203),
(121, 'AD3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:56', '2011-10-20 10:32:56', 4204),
(122, '283DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4074),
(123, '293DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4075),
(124, '2A3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4069),
(125, '2B3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 4, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4076),
(126, '2C3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 26, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4077),
(127, '2D3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 10, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4078),
(128, '2E3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4079),
(129, '2F3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:44', '2011-10-20 10:32:44', 4080),
(130, '303DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 20, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4081),
(131, '313DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 12, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4082),
(132, '323DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 13, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4083),
(133, '333DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 26, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4084),
(134, '343DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4085),
(135, '353DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4086),
(136, '363DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4087),
(137, '373DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4088),
(138, '383DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4089),
(139, '393DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4090),
(140, '3A3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, NULL, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4091),
(141, '3B3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 11, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4092),
(142, '3C3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 15, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4093),
(143, '3D3DAD54-2AB1-E011-B4FD-00145E9525E4', 3, 24, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4094),
(144, '3E3DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:45', '2011-10-20 10:32:45', 4095),
(145, '3F3DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4096),
(146, '403DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4097),
(147, '413DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4098),
(148, '423DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4099),
(149, '433DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4100),
(150, '443DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 2, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4101),
(151, '453DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 2, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4102),
(152, '463DAD54-2AB1-E011-B4FD-00145E9525E4', 4, 12, '1', 0, '2011-10-20 10:32:46', '2011-10-20 10:32:46', 4103),
(153, 'AE3DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:56', '2011-10-20 10:32:56', 4205),
(154, 'AF3DAD54-2AB1-E011-B4FD-00145E9525E4', 18, 22, '1', 0, '2011-10-20 10:32:56', '2011-10-20 10:32:56', 4206),
(155, '8039FD7F-9BB2-E011-B4FD-00145E9525E4', 18, 16, '1', 0, '2011-10-20 10:32:56', '2011-10-20 10:32:56', 4207),
(156, 'E53CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 7, '1', 0, '2011-10-20 10:32:39', '2011-10-20 10:32:39', 4006),
(157, 'E63CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 7, '1', 0, '2011-10-20 10:32:39', '2011-10-20 10:32:39', 4007),
(158, 'E73CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:39', '2011-10-20 10:32:39', 4008),
(159, 'E83CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 7, '1', 0, '2011-10-20 10:32:39', '2011-10-20 10:32:39', 4009),
(160, 'E93CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 6, '1', 0, '2011-10-20 10:32:39', '2011-10-20 10:32:39', 4010),
(161, 'EA3CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 11, '1', 0, '2011-10-20 10:32:39', '2011-10-20 10:32:39', 4011),
(162, 'EB3CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 7, '1', 0, '2011-10-20 10:32:39', '2011-10-20 10:32:39', 4012),
(163, 'EC3CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 7, '1', 0, '2011-10-20 10:32:39', '2011-10-20 10:32:39', 4013),
(164, 'ED3CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:39', '2011-10-20 10:32:39', 4014),
(165, 'EE3CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:39', '2011-10-20 10:32:39', 4015),
(166, 'EF3CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4016),
(167, 'F03CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4017),
(168, 'F13CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4018),
(169, 'F23CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4019),
(170, 'F33CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4020),
(171, 'F43CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4021),
(172, 'F53CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4022),
(173, 'F63CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4023),
(174, 'F73CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4024),
(175, 'F83CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4025),
(176, 'F93CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 8, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4026),
(177, 'FA3CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 6, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4027),
(178, 'FB3CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 6, '1', 0, '2011-10-20 10:32:40', '2011-10-20 10:32:40', 4028),
(179, 'FC3CAD54-2AB1-E011-B4FD-00145E9525E4', 1, 6, '1', 0, '2011-10-20 10:32:41', '2011-10-20 10:32:41', 4029),
(180, 'FD3CAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:41', '2011-10-20 10:32:41', 4030),
(181, 'FE3CAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:41', '2011-10-20 10:32:41', 4031),
(182, 'FF3CAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:41', '2011-10-20 10:32:41', 4032),
(183, '003DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:41', '2011-10-20 10:32:41', 4033),
(184, '013DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:41', '2011-10-20 10:32:41', 4034),
(185, '023DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:41', '2011-10-20 10:32:41', 4035),
(186, '033DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:41', '2011-10-20 10:32:41', 4036),
(187, '043DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:41', '2011-10-20 10:32:41', 4037),
(188, '053DAD54-2AB1-E011-B4FD-00145E9525E4', 2, 27, '1', 0, '2011-10-20 10:32:42', '2011-10-20 10:32:42', 4038),
(189, '573DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 15, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4119),
(190, '583DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 1, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4120),
(191, '593DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 21, '1', 0, '2011-10-20 10:32:47', '2011-10-20 10:32:47', 4121),
(192, '5A3DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 1, '1', 0, '2011-10-20 10:32:48', '2011-10-20 10:32:48', 4122),
(193, '5B3DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 13, '1', 0, '2011-10-20 10:32:48', '2011-10-20 10:32:48', 4123),
(194, '5C3DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 26, '1', 0, '2011-10-20 10:32:48', '2011-10-20 10:32:48', 4124),
(195, '5D3DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 22, '1', 0, '2011-10-20 10:32:48', '2011-10-20 10:32:48', 4125),
(196, '5E3DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 15, '1', 0, '2011-10-20 10:32:48', '2011-10-20 10:32:48', 4126),
(197, '5F3DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:48', '2011-10-20 10:32:48', 4127),
(198, '603DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 15, '1', 0, '2011-10-20 10:32:48', '2011-10-20 10:32:48', 4128),
(199, '613DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 15, '1', 0, '2011-10-20 10:32:48', '2011-10-20 10:32:48', 4129),
(200, '623DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 21, '1', 0, '2011-10-20 10:32:48', '2011-10-20 10:32:48', 4130),
(201, '633DAD54-2AB1-E011-B4FD-00145E9525E4', 5, 15, '1', 0, '2011-10-20 10:32:49', '2011-10-20 10:32:49', 4131),
(202, '643DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:49', '2011-10-20 10:32:49', 4132),
(203, '653DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 20, '1', 0, '2011-10-20 10:32:49', '2011-10-20 10:32:49', 4133),
(204, '663DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:49', '2011-10-20 10:32:49', 4134),
(205, '673DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:49', '2011-10-20 10:32:49', 4135),
(206, '683DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:49', '2011-10-20 10:32:49', 4136),
(207, '693DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:49', '2011-10-20 10:32:49', 4137),
(208, '6A3DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:49', '2011-10-20 10:32:49', 4138),
(209, '6B3DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:49', '2011-10-20 10:32:49', 4139),
(210, '6C3DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:49', '2011-10-20 10:32:49', 4140),
(211, '6E3DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:50', '2011-10-20 10:32:50', 4141),
(212, '6F3DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:50', '2011-10-20 10:32:50', 4142),
(213, '703DAD54-2AB1-E011-B4FD-00145E9525E4', 16, 25, '1', 0, '2011-10-20 10:32:50', '2011-10-20 10:32:50', 4143),
(214, '713DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 1, '1', 0, '2011-10-20 10:32:50', '2011-10-20 10:32:50', 4144),
(215, '723DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 1, '1', 0, '2011-10-20 10:32:50', '2011-10-20 10:32:50', 4145),
(216, '733DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:50', '2011-10-20 10:32:50', 4146),
(217, '743DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 15, '1', 0, '2011-10-20 10:32:50', '2011-10-20 10:32:50', 4147),
(218, '753DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 1, '1', 0, '2011-10-20 10:32:50', '2011-10-20 10:32:50', 4148),
(219, '763DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 3, '1', 0, '2011-10-20 10:32:51', '2011-10-20 10:32:51', 4149),
(220, '773DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:51', '2011-10-20 10:32:51', 4150),
(221, '783DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 13, '1', 0, '2011-10-20 10:32:51', '2011-10-20 10:32:51', 4151),
(222, '793DAD54-2AB1-E011-B4FD-00145E9525E4', 17, 3, '1', 0, '2011-10-20 10:32:51', '2011-10-20 10:32:51', 4152);
  
INSERT INTO
  classification_translation
SELECT
  c.id, title, slug, short_title, is_visible, number_of_companies, culture
FROM 
   gl_import.classifier_new_i18n
INNER JOIN
  classification c ON c.external_id = guid;

#sector

INSERT INTO `sector_translation` (`id`, `title`, `slug`, `lang`) VALUES (1, 'Авто-мото', 'avto-moto', 'bg'),(1, 'Automotive', 'automotive', 'en'),(1, 'Auto-moto', 'auto-moto', 'ro'),(2, 'Красота', 'krasota', 'bg'),(2, 'Beauty ', 'beauty', 'en'),(2, 'Frumusețe & Sănătate', 'frumusete-sanatate', 'ro'),(3, 'Строителство', 'stroitelstvo', 'bg'),(3, 'Building & Construction', 'building-construction', 'en'),(3, 'Construcții', 'constructii', 'ro'),(4, 'Деца', 'detsa', 'bg'),(4, 'Children', 'children', 'en'),(4, 'Copii', 'copii', 'ro'),(5, 'Кино и Театър', 'kino-teatar', 'bg'),(5, 'Cinema & Theatre', 'cinema-theatre', 'en'),(5, 'Teatru & Cinema', 'teatru-cinema', 'ro'),(6, 'Кафенета и сладкарници', 'kafeneta-sladkarnitsi', 'bg'),(6, 'Coffee & Tea', 'coffee-tea', 'en'),(6, 'Cafenele & Ceainării', 'cafenele-ceainarii', 'ro'),(7, 'Места за пиене', 'mesta-za-piene', 'bg'),(7, 'Drinking Out', 'drinking-out', 'en'),(7, 'La un pahar', 'la-un-pahar', 'ro'),(8, 'Места за хапване', 'mesta-za-hapvane', 'bg'),(8, 'Eating Out', 'eating-out', 'en'),(8, 'Masa în oraș', 'masa-in-oras', 'ro'),(9, 'Образование', 'obrazovanie', 'bg'),(9, 'Education', 'education', 'en'),(9, 'Educație', 'educatie', 'ro'),(10, 'Забавление', 'zabavlenie', 'bg'),(10, 'Entertainment', 'entertainment', 'en'),(10, 'Entertainment', 'entertainment', 'ro'),(11, 'Храни и напитки', 'hrani-napitki', 'bg'),(11, 'Food & Drink', 'food-drink', 'en'),(11, 'Mâncare & Băutură', 'mancare-bautura', 'ro'),(12, 'Здраве и медицина', 'zdrave-meditsina', 'bg'),(12, 'Health & Medical', 'health-medical', 'en'),(12, 'Medical', 'medical', 'ro'),(13, 'Дом и градина', 'dom-gradina', 'bg'),(13, 'Home & Garden', 'home-garden', 'en'),(13, 'Casă & Grădină', 'casa-gradina', 'ro'),(14, 'Забележителности', 'zabelejitelnosti', 'bg'),(14, 'Landmarks', 'landmarks', 'en'),(14, 'Atracții turistice', 'atractii-turistice', 'ro'),(15, 'Местни услуги', 'mestni-uslugi', 'bg'),(15, 'Local Services', 'local-services', 'en'),(15, 'Servicii locale', 'servicii-locale', 'ro'),(16, 'Пари и финанси', 'pari-finansi', 'bg'),(16, 'Money & Finance', 'money-finance', 'en'),(16, 'Bani & Finanțe', 'bani-finante', 'ro'),(17, 'Музеи и изкуство', 'muzei-izkustvo', 'bg'),(17, 'Museums & Art', 'museums-art', 'en'),(17, 'Muzee & Artă', 'muzee-arta', 'ro'),(18, 'Нощен живот', 'noshten-jivot', 'bg'),(18, 'Nightlife', 'nightlife', 'en'),(18, 'Nightlife', 'nightlife', 'ro'),(19, 'Други услуги', 'drugi-uslugi', 'bg'),(19, 'Other Services', 'other-services', 'en'),(19, 'Alte servicii', 'alte-servicii', 'ro'),(20, 'На открито', 'na-otkrito', 'bg'),(20, 'Outdoor', 'outdoor', 'en'),(20, 'Outdoor', 'outdoor', 'ro'),(21, 'Домашни любимци', 'domashni-lyubimtsi', 'bg'),(21, 'Pets', 'pets', 'en'),(21, 'Animale de companie', 'animale-de-companie', 'ro'),(22, 'Професионални услуги', 'profesionalni-uslugi', 'bg'),(22, 'Professional Services', 'professional-services', 'en'),(22, 'Servicii profesionale', 'servicii-profesionale', 'ro'),(23, 'Обществени услуги', 'obshestveni-uslugi', 'bg'),(23, 'Public Services', 'public-services', 'en'),(23, 'Servicii publice', 'servicii-publice', 'ro'),(24, 'Шопинг', 'shoping', 'bg'),(24, 'Shopping', 'shopping', 'en'),(24, 'Cumpăraturi', 'cumparaturi', 'ro'),(25, 'Спорт и фитнес', 'sport-fitnes', 'bg'),(25, 'Sport & Fitness', 'sport-fitness', 'en'),(25, 'Sport & Fitness', 'sport-fitness', 'ro'),(26, 'Технология', 'tehnologia', 'bg'),(26, 'Technology', 'technology', 'en'),(26, 'Tehnologie', 'tehnologie', 'ro'),(27, 'Пътуване ', 'patuvane', 'bg'),(27, 'Travel & Accomodation', 'travel-accomodation', 'en'),(27, 'Turism', 'turism', 'ro');
INSERT INTO `classification_sector` (`id`, `classification_id`, `sector_id`) VALUES (1, 1, 4),(2, 1, 14),(3, 1, 20),(4, 2, 1),(5, 3, 24),(6, 4, 1),(7, 5, 1),(8, 6, 25),(9, 7, 14),(10, 8, 14),(11, 9, 2),(12, 10, 24),(13, 10, 25),(14, 11, 2),(15, 12, 15),(16, 13, 25),(17, 14, 19),(18, 15, 23),(19, 16, 11),(20, 17, 15),(21, 17, 23),(22, 18, 22),(23, 19, 21),(24, 20, 8),(25, 21, 8),(26, 22, 8),(27, 23, 8),(28, 24, 7),(29, 24, 10),(30, 24, 18),(31, 25, 10),(32, 26, 7),(33, 26, 10),(34, 26, 18),(35, 27, 4),(36, 27, 20),(37, 28, 15),(38, 29, 1),(39, 30, 17),(40, 31, 27),(41, 32, 27),(42, 33, 4),(43, 33, 20),(44, 34, 7),(45, 34, 8),(46, 35, 5),(47, 35, 10),(48, 35, 18),(49, 36, 17),(50, 37, 5),(51, 37, 10),(52, 37, 18),(53, 38, 4),(54, 38, 20),(55, 39, 5),(56, 39, 10),(57, 39, 18),(58, 40, 9),(59, 40, 10),(60, 40, 25),(61, 41, 17),(62, 42, 4),(63, 43, 4),(64, 43, 10),(65, 44, 24),(66, 45, 11),(67, 46, 11),(68, 47, 11),(69, 48, 13),(70, 49, 11),(71, 50, 11),(72, 51, 13),(73, 52, 12),(74, 53, 12),(75, 54, 2),(76, 55, 2),(77, 55, 12),(78, 56, 2),(79, 56, 25),(80, 57, 2),(81, 58, 2),(82, 59, 4),(83, 59, 10),(84, 60, 11),(85, 60, 24),(86, 61, 24),(87, 62, 17),(88, 62, 24),(89, 63, 11),(90, 64, 11),(91, 64, 24),(92, 65, 13),(93, 66, 2),(94, 67, 2),(95, 68, 4),(96, 68, 10),(97, 68, 22),(98, 69, 4),(99, 69, 15),(100, 70, 15),(101, 71, 13),(102, 72, 24),(103, 73, 13),(104, 74, 15),(105, 75, 16),(106, 76, 16),(107, 77, 16),(108, 77, 22),(109, 78, 22),(110, 79, 23),(111, 80, 12),(112, 81, 19),(113, 82, 22),(114, 83, 22),(115, 84, 22),(116, 85, 22),(117, 86, 19),(118, 87, 16),(119, 87, 22),(120, 89, 22),(121, 90, 19),(122, 91, 22),(123, 92, 22),(124, 93, 22),(125, 94, 22),(126, 95, 22),(127, 96, 22),(128, 97, 22),(129, 98, 9),(130, 99, 9),(131, 100, 13),(132, 101, 14),(133, 101, 15),(134, 102, 14),(135, 102, 15),(136, 103, 15),(137, 104, 23),(138, 105, 9),(139, 106, 13),(140, 107, 26),(141, 108, 13),(142, 109, 3),(143, 110, 12),(144, 111, 12),(145, 112, 26),(146, 113, 24),(147, 114, 13),(148, 115, 13),(149, 116, 13),(150, 117, 3),(151, 117, 13),(152, 118, 24),(153, 119, 15),(154, 119, 24),(155, 120, 24),(156, 121, 24),(157, 122, 24),(158, 123, 11),(159, 123, 24),(160, 124, 11),(161, 125, 4),(162, 126, 24),(163, 126, 26),(164, 127, 10),(165, 127, 24),(166, 128, 11),(167, 129, 24),(168, 130, 20),(169, 130, 24),(170, 131, 12),(171, 132, 13),(172, 132, 24),(173, 133, 24),(174, 133, 26),(175, 134, 10),(176, 134, 24),(177, 135, 24),(178, 136, 24),(179, 137, 24),(180, 138, 24),(181, 139, 24),(182, 141, 11),(183, 142, 15),(184, 142, 24),(185, 143, 15),(186, 143, 24),(187, 144, 12),(188, 145, 12),(189, 146, 12),(190, 147, 12),(191, 148, 12),(192, 149, 4),(193, 149, 12),(194, 150, 2),(195, 151, 2),(196, 152, 12),(197, 153, 13),(198, 154, 22),(199, 155, 16),(200, 156, 7),(201, 156, 18),(202, 157, 7),(203, 157, 8),(204, 157, 18),(205, 158, 8),(206, 159, 7),(207, 159, 18),(208, 160, 6),(209, 160, 7),(210, 160, 8),(211, 161, 11),(212, 162, 7),(213, 162, 8),(214, 163, 7),(215, 163, 18),(216, 164, 8),(217, 165, 8),(218, 166, 8),(219, 167, 8),(220, 168, 8),(221, 169, 8),(222, 170, 8),(223, 171, 8),(224, 172, 8),(225, 173, 8),(226, 174, 8),(227, 175, 8),(228, 176, 8),(229, 177, 6),(230, 177, 8),(231, 178, 4),(232, 178, 6),(233, 179, 6),(234, 179, 7),(235, 180, 20),(236, 180, 27),(237, 181, 27),(238, 182, 27),(239, 183, 27),(240, 184, 27),(241, 185, 27),(242, 186, 27),(243, 187, 27),(244, 188, 27),(245, 189, 15),(246, 190, 1),(247, 191, 21),(248, 192, 1),(249, 193, 13),(250, 194, 26),(251, 195, 22),(252, 196, 15),(253, 197, 13),(254, 198, 1),(255, 198, 15),(256, 199, 15),(257, 200, 21),(258, 201, 15),(259, 202, 20),(260, 202, 25),(261, 203, 20),(262, 204, 25),(263, 205, 20),(264, 205, 25),(265, 206, 25),(266, 207, 20),(267, 207, 25),(268, 208, 25),(269, 209, 25),(270, 210, 25),(271, 211, 4),(272, 211, 20),(273, 211, 25),(274, 212, 20),(275, 212, 25),(276, 213, 20),(277, 213, 25),(278, 214, 1),(279, 215, 1),(280, 216, 13),(281, 217, 15),(282, 218, 1),(283, 219, 3),(284, 220, 13),(285, 221, 13),(286, 222, 3);
  
UPDATE classification cc INNER JOIN classification_sector c ON c.classification_id = cc.id SET cc.sector_id = c.sector_id;

INSERT INTO 
  company_classification
SELECT NULL, cc.id, c.id FROM company c 
INNER JOIN gl_import.company co ON co.guid = c.external_id 
INNER JOIN classification cc ON cc.external_id = co.classifier_guid;

UPDATE `company` c INNER JOIN company_classification cc ON cc.company_id = c.id SET c.classification_id = cc.classification_id;
UPDATE `company` c INNER JOIN classification cc ON cc.id = c.classification_id SET c.sector_id = cc.sector_id;

ALTER TABLE  `review` ADD  `old_id` VARCHAR( 255 ) NOT NULL;

SET foreign_key_checks = 0;
truncate table review;
INSERT INTO review
(`id`, `user_id`, `company_id`, `text`, `recommend`, `rating`, `badwords`, `is_published`, `slug`, `ip`, `promo_source`, `parent_id`, `recommended_at`, `created_at`, `updated_at`, `old_id`)
SELECT 
NULL, r.user_id, c.id, r.body, r.recommend, r.rating, r.badwords, r.is_published, r.slug, r.ip, r.come_from, NULL, if(r.recommend = 2, now(), NULL), r.created_at, r.updated_at, r.id
FROM gl_import.review r
INNER JOIN company c ON c.external_id = r.company_guid
LEFT JOIN gl_import.review rr ON rr.id LIKE r.headline
INNER JOIN user_profile pp ON pp.id = r.user_id
WHERE rr.id IS NULL;

INSERT INTO review
(`id`, `user_id`, `company_id`, `text`, `recommend`, `rating`, `badwords`, `is_published`, `slug`, `ip`, `promo_source`, `parent_id`, `recommended_at`, `created_at`, `updated_at`, `old_id`)
SELECT 
NULL, r.user_id, c.id, r.body, r.recommend, r.rating, r.badwords, r.is_published, r.slug, r.ip, r.come_from, rrr.id, if(r.recommend = 2, now(), NULL), r.created_at, r.updated_at, r.id
FROM gl_import.review r
INNER JOIN company c ON c.external_id = r.company_guid
INNER JOIN gl_import.review rr ON rr.id LIKE r.headline
INNER JOIN review rrr ON rrr.old_id = rr.id AND rrr.text = rr.text
INNER JOIN user_profile pp ON pp.id = r.user_id;

UPDATE company c SET average_rating = (SELECT AVG(rating) FROM review r WHERE r.company_id = c.id AND r.parent_id IS NULL);
UPDATE company SET average_rating = 0 WHERE average_rating IS NULL;

UPDATE company SET review_id = (SELECT id FROM review WHERE company_id = company.id AND r.parent_id IS NULL ORDER BY recommended_at DESC, created_at DESC LIMIT 1);

UPDATE company c SET number_of_reviews = (SELECT COUNT(*) FROM review WHERE r.company_id = c.id);

INSERT INTO category
  (`id`, `status`, `model_name`, `created_at`, `updated_at`)
SELECT 
  id, 'approved', 'event', now(), now()
FROM gl_import.event_category;


INSERT INTO category_translation
  (`id`, `title`, `is_active`, `slug`, `lang`)
SELECT
  id, title, 1, title, culture
FROM gl_import.event_category_i18n;

INSERT INTO event 
  (`id`, `start_at`, `end_at`, `category_id`, `info_url`, `buy_url`, `price`, `location_id`, `country_id`, `user_id`, `created_at`, `updated_at`, old_id)
SELECT null, e.start_at, e.end_at, e.event_category_id, e.info_url, e.buy_url, e.price, c.id, IF(e.country = 'RO', 2, 1), e.user_admin, e.created_at, e.updated_at, e.id
  FROM 
    gl_import.sf_social_event e
  INNER JOIN city c ON c.old_id = e.location
  INNER JOIN user_profile up ON up.id = user_admin
  WHERE model_name = 'Locations';
  
INSERT INTO event 
  (`id`, `start_at`, `end_at`, `category_id`, `info_url`, `buy_url`, `price`, `location_id`, `country_id`, `user_id`, `created_at`, `updated_at`, old_id)
SELECT null, e.start_at, e.end_at, e.event_category_id, e.info_url, e.buy_url, e.price, c.city_id, IF(e.country = 'RO', 2, 1), e.user_admin, e.created_at, e.updated_at, e.id
  FROM 
    gl_import.sf_social_event e
  INNER JOIN company c ON c.external_id = e.location
  INNER JOIN user_profile up ON up.id = user_admin
  WHERE model_name = 'Company';
  
INSERT INTO event_translation 
  SELECT
    ev.id, title, description, if(country='RO', 'ro', 'bg')
    FROM gl_import.sf_social_event e
    INNER JOIN event ev ON ev.old_id = e.id;
    
INSERT INTO event_user (`id`, `event_id`, `user_id`, `confirm`)
  SELECT null, e.id, up.id, confirm 
FROM gl_import.sf_social_event_user ee
  INNER JOIN event e ON e.old_id = event_id
  INNER JOIN user_profile up On up.id = ee.user_id;
  
INSERT INTO event_page (id, event_id, page_id)
  SELECT null, ee.id, p.id
FROM 
    gl_import.sf_social_event e
  INNER JOIN company c ON c.external_id = e.location
  INNER JOIN page p ON p.foreign_id = c.id
  INNER JOIN event ee ON e.id = ee.old_id;

truncate user_stat;
INSERT INTO user_stat_key VALUES (NULL, 'reviews', 'All', 'review_sector', 1);
INSERT INTO user_stat_key SELECT NULL, CONCAT('review_sector_', c.id), title, 'review_sector', 0 FROM sector c INNER JOIN sector_translation t ON t.id = c.id AND t.lang = 'en';

INSERT INTO user_stat_key VALUES (NULL, 'reviews', 'All', 'review_classification', 1);
INSERT INTO user_stat_key SELECT NULL, CONCAT('review_classification_', c.id), title, 'review_classification', 0 FROM classification c INNER JOIN classification_translation t ON t.id = c.id AND t.lang = 'en';

INSERT INTO user_stat_key VALUES (NULL, 'photos', 'All', 'photo_sector', 1);
INSERT INTO user_stat_key SELECT NULL, CONCAT('photo_sector_', c.id), title, 'photo_sector', 0 FROM sector c INNER JOIN sector_translation t ON t.id = c.id AND t.lang = 'en';

INSERT INTO user_stat_key VALUES (NULL, 'photos', 'All', 'photo_classification', 1);
INSERT INTO user_stat_key SELECT NULL, CONCAT('photo_classification_', c.id), title, 'photo_classification', 0 FROM classification c INNER JOIN classification_translation t ON t.id = c.id AND t.lang = 'en';

INSERT INTO user_stat_key VALUES (NULL, 'events', 'All', 'event_category', 1);
INSERT INTO user_stat_key SELECT NULL, CONCAT('event_category_', c.id), title, 'event_category', 0 FROM category c INNER JOIN category_translation t ON t.id = c.id AND t.lang = 'en';

ALTER TABLE  `activity` DROP FOREIGN KEY  `activity_action_id_review_id` ;
ALTER TABLE  `activity` DROP FOREIGN KEY  `activity_action_id_comment_id` ;

INSERT INTO activity 
 (`id`, `user_id`, `action_id`, `text`, `caption`, `media_id`, `status`, `comment_count`, `votes_count`, `type`, `activity_id`, `created_at`, `updated_at`)
  SELECT NULL, r.user_id, r.id, r.text, r.text, i.id, 'approved', 0, 0, 1, NULL, r.created_at, r.created_at FROM review r
  INNER JOIN company c ON c.id = r.company_id
  LEFT JOIN image i ON i.id = c.image_id;
  
INSERT INTO activity 
  (`id`, `user_id`, `action_id`, `text`, `caption`, `media_id`, `status`, `comment_count`, `votes_count`, `type`, `activity_id`, `created_at`, `updated_at`)
  SELECT NULL, r.user_id, r.id, t.title, t.description, r.image_id, 'approved', 0, 0, 3, NULL, r.created_at, r.created_at
  FROM event r
  INNER JOIN event_translation t ON t.id = r.id;
  
UPDATE company INNER JOIN city c ON c.id = city_id INNER JOIN county co ON co.id = county_id SET company.country_id = co.country_id;
  
ALTER TABLE  `image` ADD  `old_id` INT NOT NULL;
ALTER TABLE  `image` ADD  `country_id` INT NOT NULL;
INSERT INTO image
(`id`, `user_id`, `caption`, `status`, `priority`, `type`, `link`, `created_at`, `updated_at`, `filename`, old_id, country_id)
SELECT NULL, p.user_id, p.pic_title, if(p.status = 2, 'approved', 'pending'), p.priority, 'company', NULL, p.created_at, p.updated_at, pic, p.id, c.country_id
FROM gl_import.picture p INNER JOIN user_profile up ON up.id = user_id INNER JOIN company c ON p.company_guid = c.external_id;

INSERT INTO company_image
  SELECT NULL, c.id, ii.id
FROM gl_import.picture p 
INNER JOIN company c ON c.external_id = p.company_guid 
INNER JOIN image ii ON ii.old_id = p.id AND ii.filename = p.pic;

UPDATE company c SET c.image_id = (SELECT ci.image_id FROM company_image ci WHERE ci.company_id = c.id LIMIT 1) WHERE c.image_id IS NULL;


INSERT INTO image
(`id`, `user_id`, `caption`, `status`, `priority`, `type`, `link`, `created_at`, `updated_at`, `filename`)
SELECT NULL, p.user_id, CONCAT(p.first_name, ' ', p.last_name), 'approved', 0, 'user', NULL, p.created_at, p.updated_at, p.avatar
FROM gl_import.sf_guard_user_profile p INNER JOIN user_profile up ON up.id = user_id WHERE avatar != '';

UPDATE user_profile c SET c.image_id = (SELECT ci.id FROM image ci WHERE ci.user_id = c.id AND ci.type = 'user' LIMIT 1) WHERE c.image_id IS NULL;

UPDATE company SET number_of_reviews = (SELECT count(*) FROM review WHERE company_id = company.id);

TRUNCATE TABLE user_stat;
INSERT INTO user_stat SELECT NULL, user_id, 'reviews', COUNT(*) FROM review GROUP BY user_id;
INSERT INTO user_stat SELECT NULL, r.user_id, CONCAT('review_sector_', c.sector_id), COUNT(*) FROM review r INNER JOIN company c ON r.company_id = c.id GROUP BY r.user_id, c.sector_id;
INSERT INTO user_stat SELECT NULL, r.user_id, CONCAT('review_classification_', c.classification_id), COUNT(*) FROM review r INNER JOIN company c ON r.company_id = c.id GROUP BY r.user_id, c.classification_id;

INSERT INTO user_stat SELECT null, user_id, 'photos', COUNT(*) FROM image GROUP BY user_id;
INSERT INTO user_stat SELECT null, i.user_id, CONCAT('photo_sector_', c.sector_id), COUNT(*) FROM image i INNER JOIN company_image ci ON ci.image_id = i.id INNER JOIN company c ON c.id = ci.company_id GROUP BY i.user_id, c.sector_id;
INSERT INTO user_stat SELECT null, i.user_id, CONCAT('photo_classification_', c.classification_id), COUNT(*) FROM image i INNER JOIN company_image ci ON ci.image_id = i.id INNER JOIN company c ON c.id = ci.company_id GROUP BY i.user_id, c.classification_id;

INSERT INTO user_stat SELECT null, user_id, 'events', COUNT(*) FROM event GROUP BY user_id;
INSERT INTO user_stat SELECT null, user_id, CONCAT('event_category_', category_id), COUNT(*) FROM event GROUP BY user_id, category_id;


INSERT INTO image 
(`id`, `user_id`, `caption`, `status`, `priority`, `type`, `link`, `created_at`, `updated_at`, `filename`, old_id)
  SELECT NULL, e.user_admin, title, 'approved', 0, 'event', NULL, e.created_at, e.updated_at, pic, e.id
  FROM gl_import.sf_social_event e
  INNER JOIN user_profile up ON up.id = user_admin;
  
INSERT INTO event_image
  SELECT NULL, e.id, i.id
  FROM event e
  INNER JOIN image i ON i.old_id = e.id and i.type = 'event';

  UPDATE event INNER JOIN event_image ON event_id = event.id SET event.image_id = event_image.image_id;
  
UPDATE company SET score = 1;
UPDATE company SET score = score + 0.1 WHERE phone > '';
UPDATE company SET score = score + 0.1 WHERE description != '';
UPDATE company SET score = score + IF(number_of_reviews * 0.01 > 0.25, 0.25, number_of_reviews * 0.01) WHERE number_of_reviews > 0;
UPDATE company SET score = score + (average_rating * 0.05) WHERE average_rating > 0;
UPDATE company c SET c.score = c.score + (SELECT IF(COUNT(*) * 0.02 > 0.2, 0.2, COUNT(*) * 0.02) FROM company_image ci INNER JOIN image i ON i.id = ci.image_id AND i.status = 'approved' WHERE ci.company_id = c.id );
UPDATE company SET score = score + if((SELECT 1 FROM ad_service_company WHERE status = 'active' AND active_from < now() AND (crm_id IS NOT NULL OR active_to > now()) AND ad_service_id = 11 AND company_id = company.id GROUP BY company_id) = 1, 0.3, 0);

INSERT INTO company_offer
(`id`, `company_id`, `is_active`, `active_from`, `active_to`, `valid_from`, `valid_to`, `max_vouchers`, `max_per_user`, `show_to_all`, `image_id`, `code`, `count_voucher_codes`, `country_id`, `created_by`, `updated_by`, `created_at`, `updated_at`, old_id)
SELECT
NULL, c.id, v.is_active, v.active_from, v.active_to, v.valid_from, v.valid_to, v.max_vouchers, v.max_per_user, v.show_to_all, NULL, v.code, v.count_voucher_codes, c.country_id, NULL, NULL, v.created_at, v.updated_at, v.id
FROM gl_import.voucher v INNER JOIN company c ON c.external_id = v.company_guid;

INSERT INTO `company_offer_translation`
(`id`, `title`, `content`, `lang`)
SELECT co.`id`, v.`title`, v.`content`, v.culture
FROM gl_import.voucher_i18n v INNER JOIN company_offer co ON co.old_id = v.id;

INSERT INTO voucher
(`id`, `user_id`, `company_offer_id`, `code`, `status`, `created_at`, `updated_at`) 
SELECT 
NULL, c.user_id, o.id, c.code, c.voucher_status, c.created_at, c.updated_at
FROM gl_import.voucher_code c
INNER JOIN company_offer o ON o.code = c.code;


INSERT INTO `box` (`id`, `module`, `component`, `settings`) VALUES
(1, 'box', 'offer', 'a:2:{s:5:"limit";i:1;s:4:"type";s:7:"default";}'),
(6, 'box', 'offers', 'a:2:{s:5:"limit";i:1;s:4:"type";s:7:"default";}'),
(7, 'box', 'review', 'a:2:{s:5:"limit";i:1;s:4:"type";s:7:"default";}'),
(8, 'box', 'review', 'a:2:{s:5:"limit";i:1;s:4:"type";s:7:"default";}'),
(2, 'box', 'reviews', 'a:2:{s:5:"limit";i:3;s:4:"type";s:7:"default";}'),
(3, 'box', 'recommendations', 'a:2:{s:4:"type";s:7:"default";s:3:"ids";a:0:{}}'),
(4, 'box', 'events', 'a:2:{s:5:"limit";i:3;s:4:"type";s:7:"default";}'),
(5, 'box', 'categories', 'a:2:{s:5:"limit";i:3;s:4:"type";s:7:"default";}');


INSERT INTO badge 
(`id`, `is_active`, `is_seasonal`, `is_visible`)
SELECT 
`id`, `is_active`, `is_immediate_winners_check`, `is_enabled`
FROM gl_import.badge;

INSERT INTO badge_translation
(`id`, `name`, `description`, `long_description`, notify_text, `lang`)
SELECT
`badge_id`, `name`, `free_text`, '', `notify_text`, culture
FROM gl_import.badge_i18n INNER JOIN badge b ON b.id = badge_id;

INSERT INTO user_badge
(`id`, `user_id`, `badge_id`, `created_at`, `updated_at`)
SELECT
NULL, user_id, `badge_id`, `winning_date`, `bucarded_at`
FROM gl_import.`badge_2_user`
INNRE JOIN user_profile ON user_profile.id = user_id
INNER JOIN badge ON badge.id = badge_id;

INSERT INTO image
(`id`, `user_id`, `caption`, `status`, `priority`, `type`, `link`, `description`, `created_at`, `updated_at`, `filename`, `old_id`)
SELECT
NULL, pa.user_id,  v.title, 'approved', v.priority, 'video', file_title, v.description, v.created_at, v.updated_at, NULL, v.id
FROM 
gl_import.video v
INNER JOIN company c ON c.external_id = v.company_guid
INNER JOIN page p ON p.foreign_id = c.id
LEFT JOIN page_admin pa ON pa.page_id = p.id;

INSERT INTO company_image
(`id`, `company_id`, `image_id`)
SELECT
null, c.id, i.id
FROM
gl_import.video v
INNER JOIN company c ON c.external_id = v.company_guid
INNER JOIN image i ON i.old_id = v.id AND i.type = 'video' AND i.link = v.file_title;

INSERT INTO `ad_product` (`id`, `name`, `is_active`) VALUES
(1, 'Top in Search', 1),
(2, '30-day Offer', 1),
(3, 'Detail Description', 1),
(4, 'CLASSIFICATIONS', 1),
(5, 'Up to 5 videos', 1),
(6, 'Vip Position', 1);

DELETE FROM search WHERE model_name = 'Event';
INSERT INTO search
(`id`, `title`, `body`, `keywords`, `object_id`, `culture`, `model_name`)
SELECT
NULL, '', '','', c.id, 'en', 'Event'
FROM event c
GROUP BY c.id;

UPDATE search s SET s.title = (SELECT GROUP_CONCAT(t.title SEPARATOR ', ') FROM event e INNER JOIN event_translation t ON t.id = e.id WHERE e.id = s.object_id AND t.title != '') WHERE s.model_name = 'Event';
UPDATE search s SET s.body = (SELECT GROUP_CONCAT(t.description SEPARATOR ', ') FROM event e INNER JOIN event_translation t ON t.id = e.id WHERE e.id = s.object_id AND t.title != '') WHERE s.model_name = 'Event';
UPDATE search s SET s.keywords = (SELECT GROUP_CONCAT(t.title SEPARATOR ', ') FROM category e INNER JOIN category_translation t ON t.id = e.id WHERE e.id = s.object_id AND t.title != '') WHERE s.model_name = 'Event';

TRUNCATE TABLE search;
TRUNCATE TABLE review_search;
INSERT INTO search
(`id`, `title`, `body`, `keywords`, `object_id`, `culture`, `model_name`)
SELECT
NULL, CONCAT(c.title, ' ', c.title_en), CONCAT(c.description, ', ', c.description_en), '', c.id, cc.slug, 'Company'
FROM company c
INNER JOIN country cc ON cc.id = country_id;

UPDATE search SET title = index_search(title), body = index_search(body);

UPDATE search s SET keywords = (
  SELECT CONCAT_WS(', ', s.keywords,  GROUP_CONCAT(st.title SEPARATOR ', '), GROUP_CONCAT(cat.title SEPARATOR ', '), GROUP_CONCAT(cat.keywords SEPARATOR ', ')) FROM company c
    INNER JOIN classification ca ON ca.id = c.classification_id
    INNER JOIN classification_translation cat ON cat.id = ca.id
    INNER JOIN sector s ON s.id = c.sector_id
    INNER JOIN sector_translation st ON st.id = s.id
    WHERE c.id = s.object_id);
   
UPDATE search s SET s.keywords = CONCAT(keywords, (SELECT GROUP_CONCAT(text SEPARATOR ', ') FROM review r WHERE r.company_id = s.object_id));

INSERT INTO `review_search` 
SELECT null, body, s.id FROM review r INNER JOIN company c ON c.id = r.company_id INNER JOIN search s ON s.object_id = c.id AND s.model_name = 'Company'


UPDATE city SET slug = LOWER(slug);

UPDATE `classification_translation` ct SET number_of_places = (SELECT COUNT(*) FROM company WHERE country_id = IF(lang = 'ro', 2, IF(lang = 'sr', 4, IF(lang = 'mk', 3, 1))) AND ct.id = classification_id) WHERE lang IN('ro','bg', 'sr', 'mk');
SELECT * FROM `company` c INNER JOIN company_classification cs ON cs.company_id = c.id WHERE c.classification_id IS NULL
UPDATE `user_profile` SET `birthdate` = NULL WHERE `birthdate` = '0000-00-00';

INSERT INTO likes
(`id`, `user_id`, `activity_id`, ip, `created_at`, `updated_at`)
SELECT
NULL, up.id, a.id, c.user_ip, c.created_at, c.created_at
FROM gl_import.comment c
INNER JOIN review r ON r.old_id = c.review_id
INNER JOIN activity a ON a.type = 1 AND a.action_id = r.id
LEFT JOIN user_profile up ON up.id = c.user_id;

UPDATE activity SET votes_count = (SELECT COUNT(*) FROM likes where activity_id = activity.id);
UPDATE activity SET anonymous_votes_count  = (SELECT COUNT(*) FROM likes where activity_id = activity.id AND likes.user_id IS NULL);

ALTER TABLE  `company` ADD INDEX (  `city_id` ,  `status` ) ;
ALTER TABLE  `company` ADD INDEX (  `city_id` ,  `status`, classification_id ) ;

UPDATE county SET country_id = if(country_id = 2, 1, 2);
UPDATE company SET country_id = if(country_id = 2, 1, 2);



TRUNCATE TABLE newsletter_export;
INSERT INTO newsletter_export
  SELECT 
  sf.id, sf.email_address, sf.first_name, sf.last_name, sf.username, c.name, sf.created_at, if(sf.is_active, 'active', ''), sf.last_login, 0, 0
  FROM user_profile up
  INNER JOIN sf_guard_user sf ON sf.id = up.id
  INNER JOIN city c ON c.id = up.city_id
  INNER JOIN county co ON co.id = c.county_id
  WHERE co.country_id = 2;
  
UPDATE newsletter_export n SET n.number_of_reviews = (SELECT COUNT(*) FROM review r WHERE r.user_id = n.user_id);
UPDATE newsletter_export n SET n.number_of_pics = (SELECT COUNT(*) FROM image r WHERE r.user_id = n.user_id);

UPDATE company c SET c.image_id = NULL WHERE c.external_id IN (SELECT company_guid FROM gl_import.picture p WHERE p.priority = 1);
UPDATE company c INNER JOIN image i ON i.id = c.image_id INNER JOIN gl_import.picture p ON p.company_guid = c.external_id AND p.pic = i.filename SET c.image_id = i.id WHERE p.priority = 1;


INSERT INTO getlokal_new.user_setting 
(`id`, `allow_contact`, `allow_newsletter`,`allow_localization`)
SELECT sf.id, allow_contact, allow_newsletter, allow_localization
FROM gl_import.sf_guard_user_profile p
INNER JOIN getlokal_new.sf_guard_user sf ON sf.id = user_id
WHERE sf.id NOT
IN (

SELECT id
FROM getlokal_new.user_setting
)




INSERT INTO newsletter_user 
(`user_id`, `newsletter_id`, `is_active`)
SELECT 
  user_id, newsletter_id, status
FROM gl_import.usernewsletter p 
INNER JOIN sf_guard_user sf ON sf.id=user_id
where newsletter_id=1 and sf.is_active=1;


update newsletter_user set newsletter_id=2
where user_id in (select id from 
user_profile where country_id=2 )


UPDATE getlokal_new.classification_translation ct INNER JOIN getlokal_new.classification c ON c.id = ct.id SET ct.keywords = (SELECT GROUP_CONCAT(kk.word SEPARATOR ', ') FROM gl_import.rel_classifier_2_keyword k INNER JOIN gl_import.keyword kk ON kk.id = k.keyword_id WHERE k.classifier_guid = c.external_id AND k.classifier_guid = c.external_id AND kk.lang = ct.lang GROUP BY k.classifier_guid)
UPDATE `classification_translation` ct SET number_of_places = (SELECT COUNT(*) FROM company WHERE country_id = 3 AND ct.id = classification_id) WHERE lang ='mk';


SET FOREIGN_KEY_CHECKS = 0;# MySQL returned an empty result set (i.e. zero rows).

INSERT IGNORE INTO getlokal.sf_guard_user SELECT * FROM `sf_guard_user` WHERE 1;# MySQL returned an empty result set (i.e. zero rows).

INSERT IGNORE INTO getlokal.user_profile SELECT * FROM `user_profile` WHERE 1;# 667 rows affected.

INSERT IGNORE INTO getlokal.image SELECT * FROM `image` WHERE 1;# 2204 rows affected.

INSERT IGNORE INTO getlokal.event SELECT * FROM `event` WHERE 1;# 86 rows affected.

INSERT IGNORE INTO getlokal.event_image SELECT * FROM `event_image` WHERE 1;# 82 rows affected.
INSERT IGNORE INTO getlokal.event_translation SELECT * FROM `event_translation` WHERE 1;# 82 rows affected.

INSERT IGNORE INTO getlokal.event_page SELECT * FROM `event_page` WHERE 1;# 14 rows affected.


UPDATE company_location cl INNER  JOIN company c ON c.location_id = cl.id INNER JOIN city cc ON cc.id = c.city_id SET cl.longitude = cc.lng, cl.latitude = cc.lat WHERE cl.latitude < 10;;