<?php

// Exec: php symfony task:newsletterUsersTask 
class newsletterUsersTask extends sfBaseTask {
    protected function configure() {
        $this->addArguments(array());
        $this->addOptions(array(new sfCommandOption('application', null, sfCommandOption::PARAMETER_REQUIRED, 'The application name', 'frontend'), new sfCommandOption('env', null, sfCommandOption::PARAMETER_REQUIRED, 'The environment', 'dev'), new sfCommandOption('connection', null, sfCommandOption::PARAMETER_REQUIRED, 'The connection name', 'doctrine')));

        $this->namespace = 'task';
        $this->name = 'newsletterUsersTask';
        $this->briefDescription = 'fix newsletter users';
        $this->detailedDescription = <<<EOF
fix newsletter users
EOF;
    }

    protected function execute($arguments = array(), $options = array()) {
        $startTime = time();

        // initialize the database connection
        date_default_timezone_set('Europe/Sofia');
        $databaseManager = new sfDatabaseManager($this->configuration);
        $connection = $databaseManager->getDatabase($options['connection'] ? $options['connection'] : null)->getConnection();
        $connection->setAttribute(Doctrine_Core::ATTR_AUTO_FREE_QUERY_OBJECTS, true);

        gc_enable();

        //$a = array('71795'); //mary_ionescu90@yahoo.com
        $a = array('65359','65362','65559','65992','66630','66772','66782','66786','66792','66795','66797','66803','66808','66809','66814','66817','66819','66823','66825','66831','66835','66845','66850','66854','66871','66888','66892','66893','66897','66900','66917','66939','66947','66965','66966','66967','66968','66985','66997','67002','67005','67007','67012','67034','67038','67042','67048','67049','67059','67079','67080','67083','67092','67095','67100','67108','67130','67134','67141','67143','67151','67161','67164','67167','67174','67177','67181','67185','67189','67196','67197','67200','67213','67216','67227','67230','67232','67236','67241','67244','67254','67264','67266','67267','67269','67270','67272','67277','67279','67281','67295','67299','67301','67306','67308','67310','67385','67388','67409','67437','67441','67457','67460','67473','67474','67475','67476','67499','67500','67509','67511','67519','67521','67523','67533','67555','67556','67559','67578','67580','67585','67587','67597','67601','67603','67604','67611','67616','67617','67619','67623','67629','67630','67632','67636','67642','67646','67673','67681','67684','67686','67689','67691','67699','67700','67704','67705','67708','67711','67713','67714','67717','67722','67728','67732','67756','67760','67770','67811','67836','67851','67858','67913','67919','67923','67924','67929','67951','67967','67969','67973','68063','68069','68098','68115','68164','68178','68207','68215','68235','68266','68274','68291','68295','68335','68342','68348','68356','68372','68381','68409','68417','68428','68429','68454','68458','68500','68562','68577','68585','68586','68594','68596','68606','68619','68661','68668','68704','68729','68732','68738','68739','68750','68752','68753','68761','68768','68769','68776','68778','68779','68780','68785','68789','68790','68791','68792','68796','68798','68799','68802','68805','68810','68811','68814','68817','68820','68824','68825','68828','68829','68832','68833','68836','68837','68839','68841','68843','68845','68847','68848','68852','68855','68858','68863','68870','68874','68875','68878','68879','68880','68883','68884','68885','68891','68894','68897','68899','68900','68904','68905','68908','68910','68913','68914','68917','68918','68919','68921','68924','68927','68928','68930','68934','68936','68937','68939','68941','68943','68944','68945','68949','68955','68957','68959','68963','68967','68970','68972','68975','68977','68979','68980','68982','68983','68987','68991','68994','68995','68999','69002','69009','69011','69031','69045','69046','69047','69050','69051','69120','69168','69271','69309','69321','69349','69353','69415','69434','69443','69444','69447','69448','69455','69478','69483','69484','69503','69524','69534','69545','69560','69580','69581','69593','69613','69621','69648','69654','69693','69701','69712','69807','69811','69832','69833','69895','69940','69942','69956','69969','69975','69989','69997','70017','70081','70089','70128','70154','70266','70279','70315','70319','70332','70394','70481','70486','70519','70534','70554','70564','70568','70572','70620','70632','70636','70637','70645','70652','70669','70680','70762','70786','70826','70830','70837','70838','70840','70844','70852','70872','70874','70891','70892','70910','70920','70940','70978','70984','70991','71028','71030','71061','71067','71073','71076','71077','71089','71096','71099','71100','71143','71156','71166','71227','71242','71254','71350','71365','71410','71428','71434','71441','71443','71445','71446','71451','71481','71487','71489','71490','71511','71523','71530','71543','71552','71570','71612','71616','71622','71632','71651','71659','71662','71663','71681','71700','71701','71702','71713','71714','71717','71722','71725','71795','71797','71801','71805','71807','71816','71817','71822','71830','71834','71839','71851','71852','71858','71859','71860','71861','71862','71865','71866','71870','71872','71876','71877','71880','71883','71889','71890','71892','71895','71908','71911','71916','71918','71927','71931','71934','71937','71938','71939','71944','71945','71946','71948','71952','71953','71957','71962','71964','71967','71971','71973','71974','71976','71977','71983','71984','71987','71988','72003','72007','72012','72013','72014','72021','72023','72030','72033','72038','72040','72041','72044','72045','72046','72049','72050','72052','72055','72062','72064','72067','72073','72078','72080','72106','72130','72132','72154','72155','72158','72173','72193','72203','72207','72208','72213','72217','72224','72233','72250','72363','72442','72475','72496','72559');

        foreach ($a as $val) {
            $user = Doctrine::getTable('UserSetting')->find($val);

            if ($user)
            {
                // Save states
                $tmpAllowContacts = $user->getAllowContact();
                $tmpAllowNewsletter = $user->getAllowNewsletter();
                $tmpAllowBCmc = $user->getAllowBCmc();
                $tmpAllowPromo = $user->getAllowPromo();

                $newsletters = Doctrine::getTable('NewsletterUser')
                        ->createQuery('nu')
                        ->where('nu.user_id = ?', $user->getId())
                        ->execute();

                foreach ($newsletters as $newsletter) {
                    $newsletter->delete();
                }

                $user->setAllowContact(0);
                $user->setAllowNewsletter(0);
                $user->setAllowBCmc(0);
                $user->setAllowPromo(0);
                $user->save();

                $profile = $user->getUserProfile();
                $sfGuard = $profile->getSfGuardUser();

                //MC::subscribe_unsubscribe($sfGuard);
                MC::unsubscribe($sfGuard, 'bg');
                MC::unsubscribe($sfGuard, 'ro');

                $user->setAllowContact($tmpAllowContacts);
                $user->setAllowNewsletter($tmpAllowNewsletter);
                $user->setAllowBCmc($tmpAllowBCmc);
                $user->setAllowPromo($tmpAllowPromo);
                $user->save();

                $newsletters = NewsletterTable::retrieveActivePerCountryForUser($profile->getCountryId());
                if ($newsletters) {
                    foreach ($newsletters as $newsletter) {
                        $usernewsletter = new NewsletterUser ();
                        $usernewsletter->setNewsletterId($newsletter->getId());
                        $usernewsletter->setUserId($user->getId());
                        $usernewsletter->setIsActive($tmpAllowContacts);
                        $usernewsletter->save();
                    }

                    MC::subscribe_unsubscribe($sfGuard);
                }
            }
        }

        gc_collect_cycles();
    }
}