<?php

/**
 * BaseActivity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $action_id
 * @property string $text
 * @property string $caption
 * @property integer $media_id
 * @property enum $status
 * @property integer $comment_count
 * @property integer $votes_count
 * @property integer $anonymous_votes_count
 * @property integer $page_id
 * @property string $type
 * @property integer $activity_id
 * @property string $modified_field
 * @property UserProfile $UserProfile
 * @property Image $Image
 * @property Page $Page
 * @property Doctrine_Collection $Comment
 * @property Doctrine_Collection $Like
 * @property Doctrine_Collection $ActivityReview
 * @property Doctrine_Collection $ActivityComment
 * @property Doctrine_Collection $ActivityPage
 * 
 * @method integer             getUserId()                Returns the current record's "user_id" value
 * @method integer             getActionId()              Returns the current record's "action_id" value
 * @method string              getText()                  Returns the current record's "text" value
 * @method string              getCaption()               Returns the current record's "caption" value
 * @method integer             getMediaId()               Returns the current record's "media_id" value
 * @method enum                getStatus()                Returns the current record's "status" value
 * @method integer             getCommentCount()          Returns the current record's "comment_count" value
 * @method integer             getVotesCount()            Returns the current record's "votes_count" value
 * @method integer             getAnonymousVotesCount()   Returns the current record's "anonymous_votes_count" value
 * @method integer             getPageId()                Returns the current record's "page_id" value
 * @method string              getType()                  Returns the current record's "type" value
 * @method integer             getActivityId()            Returns the current record's "activity_id" value
 * @method string              getModifiedField()         Returns the current record's "modified_field" value
 * @method UserProfile         getUserProfile()           Returns the current record's "UserProfile" value
 * @method Image               getImage()                 Returns the current record's "Image" value
 * @method Page                getPage()                  Returns the current record's "Page" value
 * @method Doctrine_Collection getComment()               Returns the current record's "Comment" collection
 * @method Doctrine_Collection getLike()                  Returns the current record's "Like" collection
 * @method Doctrine_Collection getActivityReview()        Returns the current record's "ActivityReview" collection
 * @method Doctrine_Collection getActivityComment()       Returns the current record's "ActivityComment" collection
 * @method Doctrine_Collection getActivityPage()          Returns the current record's "ActivityPage" collection
 * @method Activity            setUserId()                Sets the current record's "user_id" value
 * @method Activity            setActionId()              Sets the current record's "action_id" value
 * @method Activity            setText()                  Sets the current record's "text" value
 * @method Activity            setCaption()               Sets the current record's "caption" value
 * @method Activity            setMediaId()               Sets the current record's "media_id" value
 * @method Activity            setStatus()                Sets the current record's "status" value
 * @method Activity            setCommentCount()          Sets the current record's "comment_count" value
 * @method Activity            setVotesCount()            Sets the current record's "votes_count" value
 * @method Activity            setAnonymousVotesCount()   Sets the current record's "anonymous_votes_count" value
 * @method Activity            setPageId()                Sets the current record's "page_id" value
 * @method Activity            setType()                  Sets the current record's "type" value
 * @method Activity            setActivityId()            Sets the current record's "activity_id" value
 * @method Activity            setModifiedField()         Sets the current record's "modified_field" value
 * @method Activity            setUserProfile()           Sets the current record's "UserProfile" value
 * @method Activity            setImage()                 Sets the current record's "Image" value
 * @method Activity            setPage()                  Sets the current record's "Page" value
 * @method Activity            setComment()               Sets the current record's "Comment" collection
 * @method Activity            setLike()                  Sets the current record's "Like" collection
 * @method Activity            setActivityReview()        Sets the current record's "ActivityReview" collection
 * @method Activity            setActivityComment()       Sets the current record's "ActivityComment" collection
 * @method Activity            setActivityPage()          Sets the current record's "ActivityPage" collection
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivity extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('action_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('text', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('caption', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('media_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'approved',
              1 => 'pending',
              2 => 'rejected',
             ),
             'default' => 'approved',
             ));
        $this->hasColumn('comment_count', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('votes_count', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('anonymous_votes_count', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('page_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('activity_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('modified_field', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));

        $this->setSubClasses(array(
             'ActivityReview' => 
             array(
              'type' => 1,
             ),
             'ActivityImage' => 
             array(
              'type' => 2,
             ),
             'ActivityEvent' => 
             array(
              'type' => 3,
             ),
             'ActivityList' => 
             array(
              'type' => 4,
             ),
             'ActivityComment' => 
             array(
              'type' => 5,
             ),
             'ActivityFollowPage' => 
             array(
              'type' => 6,
             ),
             'ActivityPage' => 
             array(
              'type' => 7,
             ),
             'ActivityCompanyOffer' => 
             array(
              'type' => 8,
             ),
             'ActivityListPage' => 
             array(
              'type' => 9,
             ),
             'ActivityArticle' => 
             array(
              'type' => 10,
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserProfile', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Image', array(
             'local' => 'media_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Page', array(
             'local' => 'page_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Comment', array(
             'local' => 'id',
             'foreign' => 'activity_id'));

        $this->hasMany('Like', array(
             'local' => 'id',
             'foreign' => 'activity_id'));

        $this->hasMany('ActivityReview', array(
             'local' => 'id',
             'foreign' => 'activity_id'));

        $this->hasMany('ActivityComment', array(
             'local' => 'id',
             'foreign' => 'activity_id'));

        $this->hasMany('ActivityPage', array(
             'local' => 'id',
             'foreign' => 'activity_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}