<?php

/**
 * BaseListPage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $list_id
 * @property integer $page_id
 * @property integer $user_id
 * @property string $tip
 * @property integer $rank
 * @property enum $status
 * @property Lists $Lists
 * @property CompanyPage $CompanyPage
 * @property UserProfile $UserProfile
 * @property ActivityListPage $ActivityListPage
 * 
 * @method integer          getListId()           Returns the current record's "list_id" value
 * @method integer          getPageId()           Returns the current record's "page_id" value
 * @method integer          getUserId()           Returns the current record's "user_id" value
 * @method string           getTip()              Returns the current record's "tip" value
 * @method integer          getRank()             Returns the current record's "rank" value
 * @method enum             getStatus()           Returns the current record's "status" value
 * @method Lists            getLists()            Returns the current record's "Lists" value
 * @method CompanyPage      getCompanyPage()      Returns the current record's "CompanyPage" value
 * @method UserProfile      getUserProfile()      Returns the current record's "UserProfile" value
 * @method ActivityListPage getActivityListPage() Returns the current record's "ActivityListPage" value
 * @method ListPage         setListId()           Sets the current record's "list_id" value
 * @method ListPage         setPageId()           Sets the current record's "page_id" value
 * @method ListPage         setUserId()           Sets the current record's "user_id" value
 * @method ListPage         setTip()              Sets the current record's "tip" value
 * @method ListPage         setRank()             Sets the current record's "rank" value
 * @method ListPage         setStatus()           Sets the current record's "status" value
 * @method ListPage         setLists()            Sets the current record's "Lists" value
 * @method ListPage         setCompanyPage()      Sets the current record's "CompanyPage" value
 * @method ListPage         setUserProfile()      Sets the current record's "UserProfile" value
 * @method ListPage         setActivityListPage() Sets the current record's "ActivityListPage" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseListPage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('list_page');
        $this->hasColumn('list_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('page_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('tip', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('rank', 'integer', 4, array(
             'type' => 'integer',
             'default' => 1,
             'length' => 4,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'approved',
              1 => 'pending',
              2 => 'rejected',
             ),
             'default' => 'approved',
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Lists', array(
             'local' => 'list_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('CompanyPage', array(
             'local' => 'page_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UserProfile', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ActivityListPage', array(
             'local' => 'id',
             'foreign' => 'action_id'));
    }
}