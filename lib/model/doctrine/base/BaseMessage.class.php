<?php

/**
 * BaseMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $body
 * @property integer $conversation_id
 * @property integer $page_id
 * @property boolean $is_read
 * @property Page $Page
 * @property Conversation $Conversation
 * 
 * @method string       getBody()            Returns the current record's "body" value
 * @method integer      getConversationId()  Returns the current record's "conversation_id" value
 * @method integer      getPageId()          Returns the current record's "page_id" value
 * @method boolean      getIsRead()          Returns the current record's "is_read" value
 * @method Page         getPage()            Returns the current record's "Page" value
 * @method Conversation getConversation()    Returns the current record's "Conversation" value
 * @method Message      setBody()            Sets the current record's "body" value
 * @method Message      setConversationId()  Sets the current record's "conversation_id" value
 * @method Message      setPageId()          Sets the current record's "page_id" value
 * @method Message      setIsRead()          Sets the current record's "is_read" value
 * @method Message      setPage()            Sets the current record's "Page" value
 * @method Message      setConversation()    Sets the current record's "Conversation" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMessage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('message');
        $this->hasColumn('body', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('conversation_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('page_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_read', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Page', array(
             'local' => 'page_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Conversation', array(
             'local' => 'conversation_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}