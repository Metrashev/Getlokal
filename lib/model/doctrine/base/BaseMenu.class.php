<?php

/**
 * BaseMenu
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $company_id
 * @property string $filename
 * @property enum $name
 * @property Company $Company
 * 
 * @method integer getCompanyId()  Returns the current record's "company_id" value
 * @method string  getFilename()   Returns the current record's "filename" value
 * @method enum    getName()       Returns the current record's "name" value
 * @method Company getCompany()    Returns the current record's "Company" value
 * @method Menu    setCompanyId()  Sets the current record's "company_id" value
 * @method Menu    setFilename()   Sets the current record's "filename" value
 * @method Menu    setName()       Sets the current record's "name" value
 * @method Menu    setCompany()    Sets the current record's "Company" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMenu extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('menu');
        $this->hasColumn('company_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('filename', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('name', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Menu',
              1 => 'Prices',
              2 => 'Catalogue',
              3 => 'Products',
              4 => 'Services',
             ),
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}