<?php

/**
 * BaseCompanyLocation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $company_id
 * @property integer $accuracy
 * @property boolean $is_active
 * @property integer $user_id
 * @property integer $location_type
 * @property integer $street_type_id
 * @property string $street_number
 * @property string $street
 * @property string $neighbourhood
 * @property string $building_no
 * @property string $entrance
 * @property string $floor
 * @property string $appartment
 * @property string $postcode
 * @property string $full_address
 * @property string $full_address_en
 * @property string $address_info
 * @property string $address_info_en
 * @property integer $zoom
 * @property string $sublocation
 * @property Company $Company
 * @property UserProfile $UserProfile
 * 
 * @method integer         getCompanyId()       Returns the current record's "company_id" value
 * @method integer         getAccuracy()        Returns the current record's "accuracy" value
 * @method boolean         getIsActive()        Returns the current record's "is_active" value
 * @method integer         getUserId()          Returns the current record's "user_id" value
 * @method integer         getLocationType()    Returns the current record's "location_type" value
 * @method integer         getStreetTypeId()    Returns the current record's "street_type_id" value
 * @method string          getStreetNumber()    Returns the current record's "street_number" value
 * @method string          getStreet()          Returns the current record's "street" value
 * @method string          getNeighbourhood()   Returns the current record's "neighbourhood" value
 * @method string          getBuildingNo()      Returns the current record's "building_no" value
 * @method string          getEntrance()        Returns the current record's "entrance" value
 * @method string          getFloor()           Returns the current record's "floor" value
 * @method string          getAppartment()      Returns the current record's "appartment" value
 * @method string          getPostcode()        Returns the current record's "postcode" value
 * @method string          getFullAddress()     Returns the current record's "full_address" value
 * @method string          getFullAddressEn()   Returns the current record's "full_address_en" value
 * @method string          getAddressInfo()     Returns the current record's "address_info" value
 * @method string          getAddressInfoEn()   Returns the current record's "address_info_en" value
 * @method integer         getZoom()            Returns the current record's "zoom" value
 * @method string          getSublocation()     Returns the current record's "sublocation" value
 * @method Company         getCompany()         Returns the current record's "Company" value
 * @method UserProfile     getUserProfile()     Returns the current record's "UserProfile" value
 * @method CompanyLocation setCompanyId()       Sets the current record's "company_id" value
 * @method CompanyLocation setAccuracy()        Sets the current record's "accuracy" value
 * @method CompanyLocation setIsActive()        Sets the current record's "is_active" value
 * @method CompanyLocation setUserId()          Sets the current record's "user_id" value
 * @method CompanyLocation setLocationType()    Sets the current record's "location_type" value
 * @method CompanyLocation setStreetTypeId()    Sets the current record's "street_type_id" value
 * @method CompanyLocation setStreetNumber()    Sets the current record's "street_number" value
 * @method CompanyLocation setStreet()          Sets the current record's "street" value
 * @method CompanyLocation setNeighbourhood()   Sets the current record's "neighbourhood" value
 * @method CompanyLocation setBuildingNo()      Sets the current record's "building_no" value
 * @method CompanyLocation setEntrance()        Sets the current record's "entrance" value
 * @method CompanyLocation setFloor()           Sets the current record's "floor" value
 * @method CompanyLocation setAppartment()      Sets the current record's "appartment" value
 * @method CompanyLocation setPostcode()        Sets the current record's "postcode" value
 * @method CompanyLocation setFullAddress()     Sets the current record's "full_address" value
 * @method CompanyLocation setFullAddressEn()   Sets the current record's "full_address_en" value
 * @method CompanyLocation setAddressInfo()     Sets the current record's "address_info" value
 * @method CompanyLocation setAddressInfoEn()   Sets the current record's "address_info_en" value
 * @method CompanyLocation setZoom()            Sets the current record's "zoom" value
 * @method CompanyLocation setSublocation()     Sets the current record's "sublocation" value
 * @method CompanyLocation setCompany()         Sets the current record's "Company" value
 * @method CompanyLocation setUserProfile()     Sets the current record's "UserProfile" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompanyLocation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('company_location');
        $this->hasColumn('company_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('accuracy', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('location_type', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('street_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('street_number', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('street', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('neighbourhood', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('building_no', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('entrance', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('floor', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('appartment', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('postcode', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('full_address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('full_address_en', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('address_info', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('address_info_en', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('zoom', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sublocation', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UserProfile', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $geographical0 = new Doctrine_Template_Geographical();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($geographical0);
        $this->actAs($timestampable0);
    }
}