<?php

/**
 * BaseFacebookReviewGame
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property varchar $slug
 * @property varchar $name
 * @property varchar $title
 * @property varchar $description
 * @property varchar $final_support_text
 * @property enum $status
 * @property integer $winner
 * @property varchar $intermediate_winners
 * @property enum $lang
 * @property UserProfile $UserProfile
 * @property Doctrine_Collection $FacebookReviewGameUser
 * @property Doctrine_Collection $FacebookReviewGameResult
 * 
 * @method varchar             getSlug()                     Returns the current record's "slug" value
 * @method varchar             getName()                     Returns the current record's "name" value
 * @method varchar             getTitle()                    Returns the current record's "title" value
 * @method varchar             getDescription()              Returns the current record's "description" value
 * @method varchar             getFinalSupportText()         Returns the current record's "final_support_text" value
 * @method enum                getStatus()                   Returns the current record's "status" value
 * @method integer             getWinner()                   Returns the current record's "winner" value
 * @method varchar             getIntermediateWinners()      Returns the current record's "intermediate_winners" value
 * @method enum                getLang()                     Returns the current record's "lang" value
 * @method UserProfile         getUserProfile()              Returns the current record's "UserProfile" value
 * @method Doctrine_Collection getFacebookReviewGameUser()   Returns the current record's "FacebookReviewGameUser" collection
 * @method Doctrine_Collection getFacebookReviewGameResult() Returns the current record's "FacebookReviewGameResult" collection
 * @method FacebookReviewGame  setSlug()                     Sets the current record's "slug" value
 * @method FacebookReviewGame  setName()                     Sets the current record's "name" value
 * @method FacebookReviewGame  setTitle()                    Sets the current record's "title" value
 * @method FacebookReviewGame  setDescription()              Sets the current record's "description" value
 * @method FacebookReviewGame  setFinalSupportText()         Sets the current record's "final_support_text" value
 * @method FacebookReviewGame  setStatus()                   Sets the current record's "status" value
 * @method FacebookReviewGame  setWinner()                   Sets the current record's "winner" value
 * @method FacebookReviewGame  setIntermediateWinners()      Sets the current record's "intermediate_winners" value
 * @method FacebookReviewGame  setLang()                     Sets the current record's "lang" value
 * @method FacebookReviewGame  setUserProfile()              Sets the current record's "UserProfile" value
 * @method FacebookReviewGame  setFacebookReviewGameUser()   Sets the current record's "FacebookReviewGameUser" collection
 * @method FacebookReviewGame  setFacebookReviewGameResult() Sets the current record's "FacebookReviewGameResult" collection
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFacebookReviewGame extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('facebook_review_game');
        $this->hasColumn('slug', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('name', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('title', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('description', 'varchar', 5000, array(
             'type' => 'varchar',
             'length' => 5000,
             ));
        $this->hasColumn('final_support_text', 'varchar', 5000, array(
             'type' => 'varchar',
             'length' => 5000,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'opened',
              1 => 'closed',
             ),
             'default' => 'opened',
             ));
        $this->hasColumn('winner', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('intermediate_winners', 'varchar', 250, array(
             'type' => 'varchar',
             'length' => 250,
             ));
        $this->hasColumn('lang', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'bg',
              1 => 'sr',
              2 => 'mk',
              3 => 'ro',
              4 => 'en',
             ),
             'default' => 'bg',
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserProfile', array(
             'local' => 'winner',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('FacebookReviewGameUser', array(
             'local' => 'id',
             'foreign' => 'facebook_review_game_id'));

        $this->hasMany('FacebookReviewGameResult', array(
             'local' => 'id',
             'foreign' => 'facebook_review_game_id'));
    }
}