<?php

/**
 * BaseCompanyStats
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $action_id
 * @property integer $company_id
 * @property date $month
 * @property integer $views
 * @property Company $Company
 * 
 * @method integer      getActionId()   Returns the current record's "action_id" value
 * @method integer      getCompanyId()  Returns the current record's "company_id" value
 * @method date         getMonth()      Returns the current record's "month" value
 * @method integer      getViews()      Returns the current record's "views" value
 * @method Company      getCompany()    Returns the current record's "Company" value
 * @method CompanyStats setActionId()   Sets the current record's "action_id" value
 * @method CompanyStats setCompanyId()  Sets the current record's "company_id" value
 * @method CompanyStats setMonth()      Sets the current record's "month" value
 * @method CompanyStats setViews()      Sets the current record's "views" value
 * @method CompanyStats setCompany()    Sets the current record's "Company" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompanyStats extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('company_stats');
        $this->hasColumn('action_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('company_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('month', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('views', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));


        $this->index('monthly', array(
             'fields' => 
             array(
              0 => 'action_id',
              1 => 'company_id',
              2 => 'month',
             ),
             ));
        $this->index('allmonthly', array(
             'fields' => 
             array(
              0 => 'company_id',
              1 => 'month',
             ),
             ));
        $this->option('symfony', array(
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}