<?php

/**
 * BaseEventInvite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $event_id
 * @property integer $user_id
 * @property integer $user_from
 * @property boolean $replied
 * @property Event $Event
 * @property UserProfile $UserProfile
 * 
 * @method integer     getEventId()     Returns the current record's "event_id" value
 * @method integer     getUserId()      Returns the current record's "user_id" value
 * @method integer     getUserFrom()    Returns the current record's "user_from" value
 * @method boolean     getReplied()     Returns the current record's "replied" value
 * @method Event       getEvent()       Returns the current record's "Event" value
 * @method UserProfile getUserProfile() Returns the current record's "UserProfile" value
 * @method EventInvite setEventId()     Sets the current record's "event_id" value
 * @method EventInvite setUserId()      Sets the current record's "user_id" value
 * @method EventInvite setUserFrom()    Sets the current record's "user_from" value
 * @method EventInvite setReplied()     Sets the current record's "replied" value
 * @method EventInvite setEvent()       Sets the current record's "Event" value
 * @method EventInvite setUserProfile() Sets the current record's "UserProfile" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventInvite extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_invite');
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_from', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('replied', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UserProfile', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}