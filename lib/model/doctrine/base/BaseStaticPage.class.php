<?php

/**
 * BaseStaticPage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $content
 * @property string $slug
 * @property boolean $is_active
 * @property enum $status
 * @property integer $country_id
 * @property Country $Country
 * 
 * @method string     getTitle()      Returns the current record's "title" value
 * @method string     getContent()    Returns the current record's "content" value
 * @method string     getSlug()       Returns the current record's "slug" value
 * @method boolean    getIsActive()   Returns the current record's "is_active" value
 * @method enum       getStatus()     Returns the current record's "status" value
 * @method integer    getCountryId()  Returns the current record's "country_id" value
 * @method Country    getCountry()    Returns the current record's "Country" value
 * @method StaticPage setTitle()      Sets the current record's "title" value
 * @method StaticPage setContent()    Sets the current record's "content" value
 * @method StaticPage setSlug()       Sets the current record's "slug" value
 * @method StaticPage setIsActive()   Sets the current record's "is_active" value
 * @method StaticPage setStatus()     Sets the current record's "status" value
 * @method StaticPage setCountryId()  Sets the current record's "country_id" value
 * @method StaticPage setCountry()    Sets the current record's "Country" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStaticPage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('static_page');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'approved',
              1 => 'pending',
              2 => 'rejected',
             ),
             'default' => 'approved',
             ));
        $this->hasColumn('country_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'content',
              2 => 'slug',
              3 => 'is_active',
             ),
             ));
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($i18n0);
        $this->actAs($nestedset0);
    }
}