<?php

/**
 * BaseLike
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $activity_id
 * @property string $ip
 * @property UserProfile $UserProfile
 * @property Activity $Activity
 * 
 * @method integer     getUserId()      Returns the current record's "user_id" value
 * @method integer     getActivityId()  Returns the current record's "activity_id" value
 * @method string      getIp()          Returns the current record's "ip" value
 * @method UserProfile getUserProfile() Returns the current record's "UserProfile" value
 * @method Activity    getActivity()    Returns the current record's "Activity" value
 * @method Like        setUserId()      Sets the current record's "user_id" value
 * @method Like        setActivityId()  Sets the current record's "activity_id" value
 * @method Like        setIp()          Sets the current record's "ip" value
 * @method Like        setUserProfile() Sets the current record's "UserProfile" value
 * @method Like        setActivity()    Sets the current record's "Activity" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLike extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('likes');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('activity_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ip', 'string', 25, array(
             'type' => 'string',
             'length' => 25,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserProfile', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Activity', array(
             'local' => 'activity_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}