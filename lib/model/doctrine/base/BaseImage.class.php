<?php

/**
 * BaseImage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $caption
 * @property enum $status
 * @property integer $priority
 * @property integer $country_id
 * @property string $type
 * @property string $link
 * @property string $description
 * @property UserProfile $UserProfile
 * @property UserProfile $Profile
 * @property Company $Company
 * @property CompanyImage $CompanyImage
 * @property Doctrine_Collection $ReportImage
 * @property Activity $Activity
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $EventImage
 * @property Doctrine_Collection $CompanyOffer
 * @property Doctrine_Collection $Lists
 * @property Doctrine_Collection $ListImage
 * 
 * @method integer             getUserId()       Returns the current record's "user_id" value
 * @method string              getCaption()      Returns the current record's "caption" value
 * @method enum                getStatus()       Returns the current record's "status" value
 * @method integer             getPriority()     Returns the current record's "priority" value
 * @method integer             getCountryId()    Returns the current record's "country_id" value
 * @method string              getType()         Returns the current record's "type" value
 * @method string              getLink()         Returns the current record's "link" value
 * @method string              getDescription()  Returns the current record's "description" value
 * @method UserProfile         getUserProfile()  Returns the current record's "UserProfile" value
 * @method UserProfile         getProfile()      Returns the current record's "Profile" value
 * @method Company             getCompany()      Returns the current record's "Company" value
 * @method CompanyImage        getCompanyImage() Returns the current record's "CompanyImage" value
 * @method Doctrine_Collection getReportImage()  Returns the current record's "ReportImage" collection
 * @method Activity            getActivity()     Returns the current record's "Activity" value
 * @method Doctrine_Collection getEvent()        Returns the current record's "Event" collection
 * @method Doctrine_Collection getEventImage()   Returns the current record's "EventImage" collection
 * @method Doctrine_Collection getCompanyOffer() Returns the current record's "CompanyOffer" collection
 * @method Doctrine_Collection getLists()        Returns the current record's "Lists" collection
 * @method Doctrine_Collection getListImage()    Returns the current record's "ListImage" collection
 * @method Image               setUserId()       Sets the current record's "user_id" value
 * @method Image               setCaption()      Sets the current record's "caption" value
 * @method Image               setStatus()       Sets the current record's "status" value
 * @method Image               setPriority()     Sets the current record's "priority" value
 * @method Image               setCountryId()    Sets the current record's "country_id" value
 * @method Image               setType()         Sets the current record's "type" value
 * @method Image               setLink()         Sets the current record's "link" value
 * @method Image               setDescription()  Sets the current record's "description" value
 * @method Image               setUserProfile()  Sets the current record's "UserProfile" value
 * @method Image               setProfile()      Sets the current record's "Profile" value
 * @method Image               setCompany()      Sets the current record's "Company" value
 * @method Image               setCompanyImage() Sets the current record's "CompanyImage" value
 * @method Image               setReportImage()  Sets the current record's "ReportImage" collection
 * @method Image               setActivity()     Sets the current record's "Activity" value
 * @method Image               setEvent()        Sets the current record's "Event" collection
 * @method Image               setEventImage()   Sets the current record's "EventImage" collection
 * @method Image               setCompanyOffer() Sets the current record's "CompanyOffer" collection
 * @method Image               setLists()        Sets the current record's "Lists" collection
 * @method Image               setListImage()    Sets the current record's "ListImage" collection
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseImage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('image');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('caption', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'approved',
              1 => 'rejected',
              2 => 'pending',
              3 => 'mobile_upload',
             ),
             'default' => 'approved',
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('country_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('link', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');

        $this->setSubClasses(array(
             'Video' => 
             array(
              'type' => 'video',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserProfile', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UserProfile as Profile', array(
             'local' => 'id',
             'foreign' => 'image_id'));

        $this->hasOne('Company', array(
             'local' => 'id',
             'foreign' => 'image_id'));

        $this->hasOne('CompanyImage', array(
             'local' => 'id',
             'foreign' => 'image_id'));

        $this->hasMany('ReportImage', array(
             'local' => 'id',
             'foreign' => 'object_id'));

        $this->hasOne('Activity', array(
             'local' => 'id',
             'foreign' => 'media_id'));

        $this->hasMany('Event', array(
             'local' => 'id',
             'foreign' => 'image_id'));

        $this->hasMany('EventImage', array(
             'local' => 'id',
             'foreign' => 'image_id'));

        $this->hasMany('CompanyOffer', array(
             'local' => 'id',
             'foreign' => 'image_id'));

        $this->hasMany('Lists', array(
             'local' => 'id',
             'foreign' => 'image_id'));

        $this->hasMany('ListImage', array(
             'local' => 'id',
             'foreign' => 'image_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $doctrineclusterstorage0 = new DoctrineClusterStorage(array(
             'filename' => 
             array(
              'is_image' => true,
              'sizes' => 
              array(
              0 => '150x150',
              1 => '45x45',
              2 => '260x195',
              3 => '560x420',
              'preview' => '800x0',
              ),
              'prefix' => 'photo_gallery',
              'sizefield_name' => false,
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($doctrineclusterstorage0);
    }
}