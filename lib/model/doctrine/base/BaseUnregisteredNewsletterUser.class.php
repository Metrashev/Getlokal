<?php

/**
 * BaseUnregisteredNewsletterUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $firstname
 * @property string $lastname
 * @property string $email_address
 * @property integer $country_id
 * @property Country $Country
 * 
 * @method string                     getFirstname()     Returns the current record's "firstname" value
 * @method string                     getLastname()      Returns the current record's "lastname" value
 * @method string                     getEmailAddress()  Returns the current record's "email_address" value
 * @method integer                    getCountryId()     Returns the current record's "country_id" value
 * @method Country                    getCountry()       Returns the current record's "Country" value
 * @method UnregisteredNewsletterUser setFirstname()     Sets the current record's "firstname" value
 * @method UnregisteredNewsletterUser setLastname()      Sets the current record's "lastname" value
 * @method UnregisteredNewsletterUser setEmailAddress()  Sets the current record's "email_address" value
 * @method UnregisteredNewsletterUser setCountryId()     Sets the current record's "country_id" value
 * @method UnregisteredNewsletterUser setCountry()       Sets the current record's "Country" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUnregisteredNewsletterUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('unregistered_newsletter_user');
        $this->hasColumn('firstname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('lastname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email_address', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('country_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}