<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $content
 * @property string $quotation
 * @property string $keywords
 * @property string $description
 * @property enum $status
 * @property timestamp $publish_on
 * @property integer $user_id
 * @property integer $country_id
 * @property integer $location_id
 * @property UserProfile $UserProfile
 * @property Country $Country
 * @property City $City
 * @property ActivityArticle $ActivityArticle
 * @property Doctrine_Collection $ArticleSlugLog
 * @property Doctrine_Collection $ArticleImage
 * @property Doctrine_Collection $ArticlePage
 * @property Doctrine_Collection $ArticleEvent
 * @property Doctrine_Collection $ArticleList
 * @property Doctrine_Collection $ArticleCategory
 * 
 * @method string              getTitle()           Returns the current record's "title" value
 * @method string              getContent()         Returns the current record's "content" value
 * @method string              getQuotation()       Returns the current record's "quotation" value
 * @method string              getKeywords()        Returns the current record's "keywords" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method enum                getStatus()          Returns the current record's "status" value
 * @method timestamp           getPublishOn()       Returns the current record's "publish_on" value
 * @method integer             getUserId()          Returns the current record's "user_id" value
 * @method integer             getCountryId()       Returns the current record's "country_id" value
 * @method integer             getLocationId()      Returns the current record's "location_id" value
 * @method UserProfile         getUserProfile()     Returns the current record's "UserProfile" value
 * @method Country             getCountry()         Returns the current record's "Country" value
 * @method City                getCity()            Returns the current record's "City" value
 * @method ActivityArticle     getActivityArticle() Returns the current record's "ActivityArticle" value
 * @method Doctrine_Collection getArticleSlugLog()  Returns the current record's "ArticleSlugLog" collection
 * @method Doctrine_Collection getArticleImage()    Returns the current record's "ArticleImage" collection
 * @method Doctrine_Collection getArticlePage()     Returns the current record's "ArticlePage" collection
 * @method Doctrine_Collection getArticleEvent()    Returns the current record's "ArticleEvent" collection
 * @method Doctrine_Collection getArticleList()     Returns the current record's "ArticleList" collection
 * @method Doctrine_Collection getArticleCategory() Returns the current record's "ArticleCategory" collection
 * @method Article             setTitle()           Sets the current record's "title" value
 * @method Article             setContent()         Sets the current record's "content" value
 * @method Article             setQuotation()       Sets the current record's "quotation" value
 * @method Article             setKeywords()        Sets the current record's "keywords" value
 * @method Article             setDescription()     Sets the current record's "description" value
 * @method Article             setStatus()          Sets the current record's "status" value
 * @method Article             setPublishOn()       Sets the current record's "publish_on" value
 * @method Article             setUserId()          Sets the current record's "user_id" value
 * @method Article             setCountryId()       Sets the current record's "country_id" value
 * @method Article             setLocationId()      Sets the current record's "location_id" value
 * @method Article             setUserProfile()     Sets the current record's "UserProfile" value
 * @method Article             setCountry()         Sets the current record's "Country" value
 * @method Article             setCity()            Sets the current record's "City" value
 * @method Article             setActivityArticle() Sets the current record's "ActivityArticle" value
 * @method Article             setArticleSlugLog()  Sets the current record's "ArticleSlugLog" collection
 * @method Article             setArticleImage()    Sets the current record's "ArticleImage" collection
 * @method Article             setArticlePage()     Sets the current record's "ArticlePage" collection
 * @method Article             setArticleEvent()    Sets the current record's "ArticleEvent" collection
 * @method Article             setArticleList()     Sets the current record's "ArticleList" collection
 * @method Article             setArticleCategory() Sets the current record's "ArticleCategory" collection
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
        $this->hasColumn('quotation', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
        $this->hasColumn('keywords', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'approved',
              1 => 'pending',
              2 => 'edited',
              3 => 'rejected',
              4 => 'publish_on',
             ),
             'default' => 'pending',
             ));
        $this->hasColumn('publish_on', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('country_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('location_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserProfile', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('City', array(
             'local' => 'location_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ActivityArticle', array(
             'local' => 'id',
             'foreign' => 'action_id'));

        $this->hasMany('ArticleSlugLog', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('ArticleImage', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('ArticlePage', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('ArticleEvent', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('ArticleList', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('ArticleCategory', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'content',
              2 => 'quotation',
              3 => 'keywords',
              4 => 'description',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'uniqueBy' => 
             array(
              0 => 'lang',
             ),
             'canUpdate' => false,
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}