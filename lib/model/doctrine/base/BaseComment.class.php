<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $body
 * @property enum $status
 * @property integer $user_id
 * @property integer $activity_id
 * @property integer $rank
 * @property integer $parent_id
 * @property UserProfile $UserProfile
 * @property Activity $Activity
 * @property Comment $Parent
 * @property Doctrine_Collection $Comment
 * @property ActivityComment $ActivityComment
 * 
 * @method string              getBody()            Returns the current record's "body" value
 * @method enum                getStatus()          Returns the current record's "status" value
 * @method integer             getUserId()          Returns the current record's "user_id" value
 * @method integer             getActivityId()      Returns the current record's "activity_id" value
 * @method integer             getRank()            Returns the current record's "rank" value
 * @method integer             getParentId()        Returns the current record's "parent_id" value
 * @method UserProfile         getUserProfile()     Returns the current record's "UserProfile" value
 * @method Activity            getActivity()        Returns the current record's "Activity" value
 * @method Comment             getParent()          Returns the current record's "Parent" value
 * @method Doctrine_Collection getComment()         Returns the current record's "Comment" collection
 * @method ActivityComment     getActivityComment() Returns the current record's "ActivityComment" value
 * @method Comment             setBody()            Sets the current record's "body" value
 * @method Comment             setStatus()          Sets the current record's "status" value
 * @method Comment             setUserId()          Sets the current record's "user_id" value
 * @method Comment             setActivityId()      Sets the current record's "activity_id" value
 * @method Comment             setRank()            Sets the current record's "rank" value
 * @method Comment             setParentId()        Sets the current record's "parent_id" value
 * @method Comment             setUserProfile()     Sets the current record's "UserProfile" value
 * @method Comment             setActivity()        Sets the current record's "Activity" value
 * @method Comment             setParent()          Sets the current record's "Parent" value
 * @method Comment             setComment()         Sets the current record's "Comment" collection
 * @method Comment             setActivityComment() Sets the current record's "ActivityComment" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('body', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'approved',
              1 => 'rejected',
             ),
             'default' => 'approved',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('activity_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('rank', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserProfile', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Activity', array(
             'local' => 'activity_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Comment as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Comment', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $this->hasOne('ActivityComment', array(
             'local' => 'id',
             'foreign' => 'action_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}