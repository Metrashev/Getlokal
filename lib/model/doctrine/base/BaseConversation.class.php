<?php

/**
 * BaseConversation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $page_from
 * @property integer $page_to
 * @property boolean $opened
 * @property integer $last_message_id
 * @property Page $FromPage
 * @property Page $ToPage
 * @property Message $Message
 * 
 * @method integer      getPageFrom()        Returns the current record's "page_from" value
 * @method integer      getPageTo()          Returns the current record's "page_to" value
 * @method boolean      getOpened()          Returns the current record's "opened" value
 * @method integer      getLastMessageId()   Returns the current record's "last_message_id" value
 * @method Page         getFromPage()        Returns the current record's "FromPage" value
 * @method Page         getToPage()          Returns the current record's "ToPage" value
 * @method Message      getMessage()         Returns the current record's "Message" value
 * @method Conversation setPageFrom()        Sets the current record's "page_from" value
 * @method Conversation setPageTo()          Sets the current record's "page_to" value
 * @method Conversation setOpened()          Sets the current record's "opened" value
 * @method Conversation setLastMessageId()   Sets the current record's "last_message_id" value
 * @method Conversation setFromPage()        Sets the current record's "FromPage" value
 * @method Conversation setToPage()          Sets the current record's "ToPage" value
 * @method Conversation setMessage()         Sets the current record's "Message" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConversation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('conversation');
        $this->hasColumn('page_from', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('page_to', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('opened', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('last_message_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Page as FromPage', array(
             'local' => 'page_from',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Page as ToPage', array(
             'local' => 'page_to',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Message', array(
             'local' => 'last_message_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}