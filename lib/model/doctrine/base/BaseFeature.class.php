<?php

/**
 * BaseFeature
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property boolean $is_active
 * @property enum $status
 * @property Doctrine_Collection $SectorFeature
 * @property Doctrine_Collection $PlaceFeature
 * 
 * @method string              getName()          Returns the current record's "name" value
 * @method boolean             getIsActive()      Returns the current record's "is_active" value
 * @method enum                getStatus()        Returns the current record's "status" value
 * @method Doctrine_Collection getSectorFeature() Returns the current record's "SectorFeature" collection
 * @method Doctrine_Collection getPlaceFeature()  Returns the current record's "PlaceFeature" collection
 * @method Feature             setName()          Sets the current record's "name" value
 * @method Feature             setIsActive()      Sets the current record's "is_active" value
 * @method Feature             setStatus()        Sets the current record's "status" value
 * @method Feature             setSectorFeature() Sets the current record's "SectorFeature" collection
 * @method Feature             setPlaceFeature()  Sets the current record's "PlaceFeature" collection
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFeature extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('feature');
        $this->hasColumn('name', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 60,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'approved',
              1 => 'rejected',
             ),
             'default' => 'approved',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('SectorFeature', array(
             'local' => 'id',
             'foreign' => 'feature_id'));

        $this->hasMany('PlaceFeature', array(
             'local' => 'id',
             'foreign' => 'feature_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'is_active',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}