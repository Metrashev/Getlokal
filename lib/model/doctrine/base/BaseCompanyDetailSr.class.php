<?php

/**
 * BaseCompanyDetailSr
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $company_id
 * @property integer $internal_id
 * @property string $full_company_name
 * @property string $sr_url
 * @property Company $Company
 * 
 * @method integer         getCompanyId()         Returns the current record's "company_id" value
 * @method integer         getInternalId()        Returns the current record's "internal_id" value
 * @method string          getFullCompanyName()   Returns the current record's "full_company_name" value
 * @method string          getSrUrl()             Returns the current record's "sr_url" value
 * @method Company         getCompany()           Returns the current record's "Company" value
 * @method CompanyDetailSr setCompanyId()         Sets the current record's "company_id" value
 * @method CompanyDetailSr setInternalId()        Sets the current record's "internal_id" value
 * @method CompanyDetailSr setFullCompanyName()   Sets the current record's "full_company_name" value
 * @method CompanyDetailSr setSrUrl()             Sets the current record's "sr_url" value
 * @method CompanyDetailSr setCompany()           Sets the current record's "Company" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompanyDetailSr extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('company_detail_sr');
        $this->hasColumn('company_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('internal_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('full_company_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('sr_url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}