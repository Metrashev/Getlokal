<?php

/**
 * BaseFollowPage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $page_id
 * @property boolean $email_notification
 * @property boolean $internal_notification
 * @property boolean $newsfeed
 * @property boolean $weekly_update
 * @property UserProfile $UserProfile
 * @property Page $Page
 * @property ActivityFollowPage $ActivityFollowPage
 * 
 * @method integer            getUserId()                Returns the current record's "user_id" value
 * @method integer            getPageId()                Returns the current record's "page_id" value
 * @method boolean            getEmailNotification()     Returns the current record's "email_notification" value
 * @method boolean            getInternalNotification()  Returns the current record's "internal_notification" value
 * @method boolean            getNewsfeed()              Returns the current record's "newsfeed" value
 * @method boolean            getWeeklyUpdate()          Returns the current record's "weekly_update" value
 * @method UserProfile        getUserProfile()           Returns the current record's "UserProfile" value
 * @method Page               getPage()                  Returns the current record's "Page" value
 * @method ActivityFollowPage getActivityFollowPage()    Returns the current record's "ActivityFollowPage" value
 * @method FollowPage         setUserId()                Sets the current record's "user_id" value
 * @method FollowPage         setPageId()                Sets the current record's "page_id" value
 * @method FollowPage         setEmailNotification()     Sets the current record's "email_notification" value
 * @method FollowPage         setInternalNotification()  Sets the current record's "internal_notification" value
 * @method FollowPage         setNewsfeed()              Sets the current record's "newsfeed" value
 * @method FollowPage         setWeeklyUpdate()          Sets the current record's "weekly_update" value
 * @method FollowPage         setUserProfile()           Sets the current record's "UserProfile" value
 * @method FollowPage         setPage()                  Sets the current record's "Page" value
 * @method FollowPage         setActivityFollowPage()    Sets the current record's "ActivityFollowPage" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFollowPage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('follow_page');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('page_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('email_notification', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('internal_notification', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('newsfeed', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('weekly_update', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserProfile', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Page', array(
             'local' => 'page_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ActivityFollowPage', array(
             'local' => 'id',
             'foreign' => 'action_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}