<?php

/**
 * BaseEventUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $event_id
 * @property integer $user_id
 * @property integer $confirm
 * @property Event $Event
 * @property UserProfile $UserProfile
 * 
 * @method integer     getEventId()     Returns the current record's "event_id" value
 * @method integer     getUserId()      Returns the current record's "user_id" value
 * @method integer     getConfirm()     Returns the current record's "confirm" value
 * @method Event       getEvent()       Returns the current record's "Event" value
 * @method UserProfile getUserProfile() Returns the current record's "UserProfile" value
 * @method EventUser   setEventId()     Sets the current record's "event_id" value
 * @method EventUser   setUserId()      Sets the current record's "user_id" value
 * @method EventUser   setConfirm()     Sets the current record's "confirm" value
 * @method EventUser   setEvent()       Sets the current record's "Event" value
 * @method EventUser   setUserProfile() Sets the current record's "UserProfile" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_user');
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('confirm', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UserProfile', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}