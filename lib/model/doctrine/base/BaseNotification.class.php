<?php

/**
 * BaseNotification
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $page_id
 * @property varchar $model_name
 * @property integer $foreign_id
 * @property boolean $is_read
 * @property Page $Page
 * 
 * @method integer      getPageId()     Returns the current record's "page_id" value
 * @method varchar      getModelName()  Returns the current record's "model_name" value
 * @method integer      getForeignId()  Returns the current record's "foreign_id" value
 * @method boolean      getIsRead()     Returns the current record's "is_read" value
 * @method Page         getPage()       Returns the current record's "Page" value
 * @method Notification setPageId()     Sets the current record's "page_id" value
 * @method Notification setModelName()  Sets the current record's "model_name" value
 * @method Notification setForeignId()  Sets the current record's "foreign_id" value
 * @method Notification setIsRead()     Sets the current record's "is_read" value
 * @method Notification setPage()       Sets the current record's "Page" value
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNotification extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('notification');
        $this->hasColumn('page_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('model_name', 'varchar', null, array(
             'type' => 'varchar',
             'notnull' => true,
             ));
        $this->hasColumn('foreign_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('is_read', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Page', array(
             'local' => 'page_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}