<?php

  /**
  * SectorTable
  *
  * This class has been auto-generated by the Doctrine ORM Framework
  */
  class SectorTable extends Doctrine_Table
  {
    /**
    * Returns an instance of this class.
    *
    * @return object SectorTable
    */
    public static function getInstance()
    {
      return Doctrine_Core::getTable('Sector');
    }

    public function getTranslatedSlug($slug, $culture = 'en')
    {
      if($original = $this->createQuery('s')->innerJoin('s.Translation t')->where('t.slug = ?', $slug)->fetchOne())
        return $this->createQuery('s')->innerJoin('s.Translation')->where('s.id = ?', $original->getId())->fetchOne()->Translation[$culture]->slug;

      return false;
    }

    public function doSelectForSlug($slug, $culture = null, $new_culture)
    {
      $obj = $this->findOneBySlugAndCulture($slug, $culture);

      return $this->findOneByIdAndCulture($obj->getId(), $new_culture);
    }

    public function findOneBySlugAndCulture($slug, $culture = null)
    {
      if(!$culture)
      {
        $culture = sfContext::getInstance()->getUser()->getCulture();
      }

      $q = $this->createQuery('a')
        ->leftJoin('a.Translation t')
        ->andWhere('t.lang = '. '"'.$culture.'"')
        ->andWhere('t.slug = '. '"'.$slug.'"');
      return $q->fetchOne();
    }

    public function findOneByIdAndCulture($id, $culture = null)
    {
      if(!$culture){
        $culture = sfContext::getInstance()->getUser()->getCulture();
      }
      $q = $this->createQuery('a')
      ->leftJoin('a.Translation t')
      ->andWhere('t.lang = '. '"'.$culture.'"')
      ->andWhere('id = '. $id);
      //echo $q->getSqlQuery();exit();
      $obj_array =  $q->fetchArray();
      return ($obj_array[0]['Translation'][$culture]['slug'] );
    }

    public function findOneBySlug($slug, $culture = null)
    {
      return $this->findOneBySlugAndCulture($slug, $culture);
    }
    
    public static function applyRankFilter($query, $value)
    {
        $rootAlias = $query->getRootAlias();
    	$query->innerJoin($rootAlias.'.Translation st')
    	->addWhere('st.rank = ?', $value['text']);
    	return $query;
    }
}
