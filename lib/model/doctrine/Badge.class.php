<?php

/**
 * Badge
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Badge extends BaseBadge
{
  public function getProgress()
  {
    $stats = array();
    foreach($this->getBadgeRequirement() as $requirement)
    {
      foreach($requirement->getBadgeRequirementField() as $field)
      {
        $count = count($field->getUserStat())? $field->getUserStat()->getFirst()->getValue(): 0;
        $stats['%'.$field->getKey().'%'] = $count > $requirement->getValue()? $requirement->getValue(): $count;
      }
    }
    
    $return = $this->getProgressText();
    foreach($stats as $key => $count)
    {
      $return = str_replace($key, $count, $return);
    }
    
    return $return;
  }
  
  
  public function postSave($event)
  {
    if(in_array('is_active', $this->getModified()) && $this->getIsActive() && !$this->getIsSeasonal())
    {
      $query = "
        SELECT sub_x.user, sub_x.badge_id, SUM(IF(sub_x.group_count >= 1, 1,0)) as requirement_count, sub_x.requirement FROM 
          (SELECT x.*, x.requirements as requirement, x.user_id as user, SUM(IF(x.sum_score >= x.value, 1, 0)) group_count FROM
            (SELECT b.id AS badge_id, us.user_id, b.requirements as requirements, br.group_no AS group_no, br.keyvalue AS value, SUM(us.keyvalue) sum_score FROM user_stat AS us
            INNER JOIN badge_requirement_field brf ON brf.keyname = us.keyname
            INNER JOIN badge_requirement br ON br.id = brf.requirement_id
            INNER JOIN badge b ON b.id = br.badge_id
            LEFT JOIN user_badge ub ON ub.badge_id = b.id AND ub.user_id = us.user_id
            WHERE ub.id IS NULL AND b.id = ?
            GROUP BY CONCAT(us.user_id, '_', brf.requirement_id, '_', b.id)) x
          GROUP BY CONCAT(x.user_id, '_', x.badge_id, '_', x.group_no)) sub_x
        GROUP BY sub_x.user, sub_x.badge_id
        HAVING sub_x.requirement = requirement_count";
        
        $con = Doctrine::getConnectionByTableName('user_stat');
        $result = $con->execute($query, array($this->getId()));
        
        while ($row = $result->fetch(PDO::FETCH_ASSOC, PDO::FETCH_ORI_NEXT)) {
          $badge = new UserBadge();
          $badge->setBadgeId($row['badge_id']);
          $badge->setUserId($row['user']);
          $badge->save();
        }
    }
  }
}