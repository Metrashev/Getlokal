<?php

/**
 * Page
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Page extends BasePage
{

	public static function getPagerForEventSearchByTitle($placeName, $cityId = null, $page = 1, $eventId=null, $row = 10, $culture = null){
		
		if (empty($culture)){
			$culture = sfContext::getInstance()->getUser()->getCulture();
		}
		$placeName = mb_convert_case($placeName, MB_CASE_TITLE, "UTF-8");
		
		$placeName= "%" . $placeName . "%";
		//print_r($eventId);exit();
		$query = Doctrine::getTable('CompanyPage')
              ->createQuery('p')
              ->innerJoin('p.Company c')
              ->innerJoin('c.Translation ctr')
              ->where ( '(ctr.title LIKE ? ) and c.city_id = ?', array ($placeName,$cityId) )
              ->andWhere('c.status = ? ', CompanyTable::VISIBLE)
              ->orderBy('p.created_at DESC');
    	
        if ($eventId)   {  
			$q2 = $query->createSubquery ()->select ( 'ep.page_id' )
			      ->from ( 'EventPage ep' )
			      ->andWhere('ep.event_id = '. $eventId);
			
	      	$query->andWhere ( 'p.id NOT IN (' . $q2->getDql () . ')' );
        }
              
        //print_r($query->getSqlQuery());exit();      
              
        $pager = new sfDoctrinePager ( 'Page', $row );
    	
		$pager->setQuery($query);
		
		
		$pager->setPage ( $page );
		$pager->init ();
		
		return $pager;
	}
	

	public static function getPagerForListSearchByTitle($placeName, $cityId = null, $page = 1, $listId, $row = 10, $culture = null){
		
		if (empty($culture)){
			$culture = sfContext::getInstance()->getUser()->getCulture();
		}
		$placeName = mb_convert_case($placeName, MB_CASE_TITLE, "UTF-8");
		
		$placeName= "%" . $placeName . "%";
		//print_r($placeName);exit();
		$query = Doctrine::getTable('CompanyPage')
              ->createQuery('p')
              ->innerJoin('p.Company c')
              ->innerJoin('c.Translation ctr')
              ->where ( '(ctr.title LIKE ? ) and c.city_id = ? and c.status=0', array ($placeName,$cityId) )
              ->andWhere('c.status = ? ', CompanyTable::VISIBLE)
              ->orderBy('p.created_at DESC')
              ->limit(10);
              
		$q2 = $query->createSubquery ()->select ( 'lp.page_id' )
		      ->from ( 'ListPage lp' )
		      ->andWhere('lp.list_id = '. $listId);
		
      	$query->andWhere ( 'p.id NOT IN (' . $q2->getDql () . ')' );
              
              
        //print_r($query->getSqlQuery());exit();      
        $pages = $query->execute();
        /*      
        $pager = new sfDoctrinePager ( 'Page', $row );
    	
		$pager->setQuery($query);
		
		
		$pager->setPage ( $page );
		$pager->init ();
		*/
		return $pages;
	}
	
	public static function getPagerForArticleSearchByTitle($placeName, $cityId = null, $page = 1, $articleId, $row = 10, $culture = null){
		if (empty($culture)){
			$culture = sfContext::getInstance()->getUser()->getCulture();
		}
		$placeName = mb_convert_case($placeName, MB_CASE_TITLE, "UTF-8");
	
		$placeName= "%" . $placeName . "%";
		//print_r($placeName);exit();
		$query = Doctrine::getTable('CompanyPage')
		->createQuery('p')
		->innerJoin('p.Company c')
                ->innerJoin('c.Translation ctr')
		->where ( '(ctr.title LIKE ? ) and c.city_id = ? and c.status=0', array ($placeName,$cityId) )
		->andWhere('c.status = ? ', CompanyTable::VISIBLE)
		->orderBy('p.created_at DESC')
		->limit(10);

		$q2 = $query->createSubquery ()->select ( 'ap.page_id' )
		->from ( 'ArticlePage ap' )
		->andWhere('ap.article_id = ?', $articleId);
	
		$query->andWhere ( 'p.id NOT IN (' . $q2->getDql () . ')' );
	
	
		//print_r($query->getSqlQuery());exit();
		$pages = $query->execute();
		/*
		 $pager = new sfDoctrinePager ( 'Page', $row );
		 
		$pager->setQuery($query);
	
	
		$pager->setPage ( $page );
		$pager->init ();
		*/
		return $pages;
	}
}