<?php

/**
 * Image
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    getLokal
 * @subpackage model
 * @author     Get Lokal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Image extends BaseImage {
	public function getThumb($size = 0, $absolute = false) {
		return $this->getFile ()->getThumb ( $size, $absolute );
	}
        
        public function getThumbOfferImage() {
		return '/uploads/offers/'.$this->getFileName ();
	}
	
	public function preSave($event) {
		if ($this->getCountryId ())
			return;
		
		$this->setCountryId ( sfContext::getInstance ()->getUser ()->getCountry ()->getId () );
		$this->setCaption(strip_tags($this->getCaption()));
		$this->setDescription(strip_tags($this->getDescription()));
	}
	
	public function postSave($event) {
		parent::postSave ( $event );
		if ($this->getCompanyOffer ())
			return;
		
		$photos = Doctrine::getTable ( 'Image' )->createQuery ( 'i' )->innerJoin ( 'i.CompanyImage ci' )->where ( 'i.user_id = ?', $this->getUserId () )->count ();
		
		Doctrine::getTable ( 'UserStat' )->updateStat ( $this->getUserId (), array ('photos' => $photos ) );
	
	}
	public function postInsert($event) {
		parent::postInsert ( $event );
		$activity = Doctrine::getTable ( 'ActivityImage' )->getActivity ( $this->getId () );
		$activity->setCaption ( $this->getCaption () );
		$activity->setUserId ( $this->getUserId () );
	    if ($this->getType() == 'user')
		{
		$activity->setPageId (  $this->getUserProfile ()->getUserPage()->getId() );	
		}
		$activity->setMediaId ( $this->getId () );
		$activity->save ();
	}
	
	public function preDelete($event) {
		if (! $this->getCompany ()->isNew () && $this->getCompany ()->getImageId () == $this->getId ()) {
			$query = Doctrine::getTable ( 'Image' )->createQuery ( 'i' )->innerJoin ( 'i.CompanyImage ci' )->where ( 'i.id != ?', $this->getId () )->andWhere ( 'ci.company_id = ?', $this->getCompany ()->getId () );
			
			if ($cover = $query->fetchOne ())
				$this->getCompany ()->setImageId ( $cover->getId () );
			else
				$this->getCompany ()->setImageId ( null );
			
			$this->getCompany ()->save ();
		}
		
		if (! $this->getUserProfile ()->isNew () && $this->getUserProfile ()->getImageId () == $this->getId ()) {
			$query = Doctrine::getTable ( 'Image' )->createQuery ( 'i' )->leftJoin ( 'i.UserProfile ci' )->where ( 'i.id != ?', $this->getId () )->andWhere ( 'ci.id = ?', $this->getUserProfile ()->getId () );
			
			if ($cover = $query->fetchOne ())
				$this->getUserProfile()->setImageId($cover->getId());
      else
        $this->getUserProfile()->setImageId(null);
      
      $this->getUserProfile()->save();
    }
    
    $this->clearRelated();
    
    parent::preDelete($event);
  }
  
  public function fixCacheFilename(){
  	$this->getFile()->setFilename($this->getFilename());
  }

}